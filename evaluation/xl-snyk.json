{
    "fileScanResults": [
        {
            "filepath": "./bad_2100_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_827_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1408_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 54,
                                        "endLine": 54,
                                        "snippet": "    <div id=\"content\" style=\"width:<?php echo $monitor->Width() ?>px; height:<?php echo $monitor->Height() ?>px; position:relative; margin: 0 auto;\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 54,
                                        "endLine": 54,
                                        "snippet": "    <div id=\"content\" style=\"width:<?php echo $monitor->Width() ?>px; height:<?php echo $monitor->Height() ?>px; position:relative; margin: 0 auto;\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "        <input type=\"hidden\" name=\"mid\" value=\"<?php echo $mid ?>\"/>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 60,
                                        "endLine": 60,
                                        "snippet": "          <?php echo makePopupButton('?view=zone&mid=' . $mid . '&zid=0', 'zmZone', array('zone', $monitor->Width(), $monitor->Height()), translate('AddNewZone'), canEdit('Monitors')); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 77,
                                        "endLine": 77,
                                        "snippet": "              <td class=\"colName\"><?php echo makePopupLink('?view=zone&mid=' . $mid . '&zid=' . $zone['Id'], 'zmZone', array('zone', $monitor->Width(), $monitor->Height()), $zone['Name'], true, 'onclick=\"streamCmdQuit( true ); return( false );\"'); ?></td>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 78,
                                        "endLine": 78,
                                        "snippet": "              <td class=\"colType\"><?php echo $zone['Type'] ?></td>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 79,
                                        "endLine": 79,
                                        "snippet": "              <td class=\"colUnits\"><?php echo $zone['Area'] ?>&nbsp;/&nbsp;<?php echo sprintf( \"%.2f\", ($zone['Area']*100)/($monitor->Width()*$monitor->Height()) ) ?></td>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 79,
                                        "endLine": 79,
                                        "snippet": "              <td class=\"colUnits\"><?php echo $zone['Area'] ?>&nbsp;/&nbsp;<?php echo sprintf( \"%.2f\", ($zone['Area']*100)/($monitor->Width()*$monitor->Height()) ) ?></td>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 80,
                                        "endLine": 80,
                                        "snippet": "              <td class=\"colMark\"><input type=\"checkbox\" name=\"markZids[]\" value=\"<?php echo $zone['Id'] ?>\" data-on-click-this=\"configureDeleteButton\"<?php if ( !canEdit( 'Monitors' ) ) { ?> disabled=\"disabled\"<?php } ?>/></td>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 88,
                                        "endLine": 88,
                                        "snippet": "        <?php echo getStreamHTML( $monitor ); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 89,
                                        "endLine": 89,
                                        "snippet": "        <svg class=\"zones\" width=\"<?php echo $monitor->Width() ?>\" height=\"<?php echo $monitor->Height() ?>\" style=\"position:absolute; top: 0; left: 0; background: none;\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 89,
                                        "endLine": 89,
                                        "snippet": "        <svg class=\"zones\" width=\"<?php echo $monitor->Width() ?>\" height=\"<?php echo $monitor->Height() ?>\" style=\"position:absolute; top: 0; left: 0; background: none;\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 93,
                                        "endLine": 93,
                                        "snippet": "          <polygon points=\"<?php echo $zone['AreaCoords'] ?>\" class=\"popup-link <?php echo $zone['Type']?>\" onclick=\"streamCmdQuit( true ); return( false );\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 93,
                                        "endLine": 93,
                                        "snippet": "          <polygon points=\"<?php echo $zone['AreaCoords'] ?>\" class=\"popup-link <?php echo $zone['Type']?>\" onclick=\"streamCmdQuit( true ); return( false );\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 94,
                                        "endLine": 94,
                                        "snippet": "                   data-url=\"?view=zone&amp;mid=<?php echo $mid ?>&amp;zid=<?php echo $zone['Id'] ?>\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 94,
                                        "endLine": 94,
                                        "snippet": "                   data-url=\"?view=zone&amp;mid=<?php echo $mid ?>&amp;zid=<?php echo $zone['Id'] ?>\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 97,
                                        "endLine": 97,
                                        "snippet": "                   data-window-width=\"<?php echo $monitor->Width ?>\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 98,
                                        "endLine": 98,
                                        "snippet": "                   data-window-height=\"<?php echo $monitor->Height ?>\"/>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 55,
                                        "endLine": 55,
                                        "snippet": "      <form name=\"contentForm\" id=\"contentForm\" method=\"get\" action=\"<?php echo $_SERVER['PHP_SELF'] ?>\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2228_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_292_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2053_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3870_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3810_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5213_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_789_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 76,
                                        "endLine": 76,
                                        "snippet": "                    user.setPassword(password);"
                                    }
                                }
                            ],
                            "message": "An insecure random number generator is used to create a password (the random value flows from org.apache.commons.lang.RandomStringUtils.randomAlphanumeric). Consider using java.security.SecureRandom to generate strong passwords.",
                            "ruleId": "java/InsecurelyGeneratedPassword"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4969_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4858_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1464_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2213_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1997_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1139_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 75,
                                        "endLine": 75,
                                        "snippet": "\t\techo \"<a href='contact_address_edit.php?contact_uuid=\".$_GET['id'].\"' alt='\".$text['button-add'].\"'>$v_link_label_add</a>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1511_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2993_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5373_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4509_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5756_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4496_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1801_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2763_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5617_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4636_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4140_1.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5426_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3514_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4976_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 33,
                                        "endLine": 33,
                                        "snippet": "    echo $html;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 55,
                                        "endLine": 55,
                                        "snippet": "    echo $html;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_641_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1141_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 77,
                                        "endLine": 77,
                                        "snippet": "\t\techo \"<a href='contact_time_edit.php?contact_uuid=\".$_GET['id'].\"' alt='\".$text['button-add'].\"'>$v_link_label_add</a>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_238_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5818_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4323_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4724_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_777_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2495_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4682_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5352_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4521_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3706_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2743_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4938_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1126_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3865_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4905_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2414_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_775_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3700_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5421_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3586_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5447_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3559_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 92,
                                        "endLine": 92,
                                        "snippet": "            echo '<pre>';"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 93,
                                        "endLine": 93,
                                        "snippet": "            echo $this->__toString();"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 94,
                                        "endLine": 94,
                                        "snippet": "            echo \"\\n\\n\\nError happened while handling exception:\";"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 95,
                                        "endLine": 95,
                                        "snippet": "            echo $e->__toString();"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 96,
                                        "endLine": 96,
                                        "snippet": "            echo '</pre>';"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_873_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 107,
                                        "endLine": 107,
                                        "snippet": "        response.setHeader(\"ETag\", etag);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from the request URL flows into setHeader and reaches an HTTP header returned to the user. This may allow a malicious input that contain CR/LF to split the http response into two responses and the second response to be controlled by the attacker. This may be used to mount a range of attacks such as cross-site scripting or cache poisoning.",
                            "ruleId": "java/HttpResponseSplitting"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_750_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2274_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5825_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3252_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2158_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1904_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_180_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2930_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3494_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5186_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5076_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3593_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2186_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4483_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5010_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1510_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3528_0.rb",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 188,
                                        "endLine": 188,
                                        "snippet": "      regexp = file_list.body.match(/name=[\"']#{Regexp.quote params[:filename]}[\"'].*size=[\"']([^\"']*)[\"']/)"
                                    }
                                }
                            ],
                            "message": "Unsanitized user input from an HTTP parameter flows into regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
                            "ruleId": "ruby/reDOS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_558_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_913_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1344_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3483_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 386,
                                        "endLine": 386,
                                        "snippet": "\treturn v ? perf_config_bool(k, v) : def;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an environment variable flows into a multiplication operator (*), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
                            "ruleId": "cpp/IntegerOverflow"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 417,
                                        "endLine": 417,
                                        "snippet": "\t\t\tret += perf_config_from_file(fn, user_config, data);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an environment variable flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitary files.",
                            "ruleId": "cpp/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5150_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2951_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_965_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_663_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_416_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4469_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4601_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_336_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_584_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2381_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_293_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 147,
                                        "endLine": 147,
                                        "snippet": "\tlen = php_dirname(dirname, strlen(dirname));"
                                    }
                                }
                            ],
                            "message": "Potential improperly null terminated input from a pointer to an input buffer flows into strlen, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
                            "ruleId": "cpp/ImproperNullTermination"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1750_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5238_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2557_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_833_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_839_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2873_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 161,
                                        "endLine": 161,
                                        "snippet": "            echo '<p>'.$PMF_LANG['ad_att_fail'].'</p>';"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1346_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1500_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_792_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5399_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5557_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5149_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 134,
                                        "endLine": 134,
                                        "snippet": "    header(\"Location: $url\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3758_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5664_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2175_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4380_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4547_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1974_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_556_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2480_1.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3477_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3442_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4339_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1241_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1269_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4928_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1489_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 214,
                                        "endLine": 214,
                                        "snippet": "\t\t\t$student_pin = md5($addslashes($_POST['student_pin']));"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 240,
                                        "endLine": 240,
                                        "snippet": "\t\t\t$code = substr(md5($_POST['email'] . $now . $m_id), 0, 10);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5184_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2476_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 56,
                                        "endLine": 56,
                                        "snippet": "        this.nettyHeaders = new DefaultHttpHeaders(false);"
                                    }
                                }
                            ],
                            "message": "The sanitization of http headers is disabled. This may leave the application exposed to HTTP response splitting attacks.",
                            "ruleId": "java/HttpResponseSplittingNoSanitization"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3584_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5445_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5247_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5827_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_206_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1397_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5635_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2522_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_549_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3747_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3278_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3702_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1712_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2437_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5358_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4734_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1036_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4665_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2349_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 75,
                                        "endLine": 75,
                                        "snippet": "\t\t\t\t\t$db->query('UPDATE `' . table_users . \"` SET `user_pass` = '$saltedPass' WHERE `user_login` = '\".$user->user_login.\"'\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 76,
                                        "endLine": 76,
                                        "snippet": "\t\t\t\t\t$db->query('UPDATE `' . table_users . '` SET `last_reset_request` = FROM_UNIXTIME('.time().') WHERE `user_login` = \"'.$user->user_login.'\"');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1862_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_884_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3798_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3481_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2386_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1145_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 94,
                                        "endLine": 94,
                                        "snippet": "\t\t$result = $database->select($sql, $parameters, 'all');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into select, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 112,
                                        "endLine": 112,
                                        "snippet": "\t\t\t\techo th_order_by('device_setting_subcategory', $text['label-category'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 113,
                                        "endLine": 113,
                                        "snippet": "\t\t\t\techo th_order_by('device_setting_name', $text['label-type'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 114,
                                        "endLine": 114,
                                        "snippet": "\t\t\t\techo th_order_by('device_setting_value', $text['label-value'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 115,
                                        "endLine": 115,
                                        "snippet": "\t\t\t\techo th_order_by('device_setting_enabled', $text['label-enabled'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 116,
                                        "endLine": 116,
                                        "snippet": "\t\t\t\techo th_order_by('device_setting_description', $text['label-description'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 157,
                                        "endLine": 157,
                                        "snippet": "\t\techo \"\t\t\t<a href='device_setting_edit.php?device_uuid=\".$_GET['id'].\"' alt='\".$text['button-add'].\"'>$v_link_label_add</a>\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1857_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_440_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3235_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 40,
                                        "endLine": 40,
                                        "snippet": "\t<div id=\"ccm-<?=$searchInstance?>-overlay-wrapper\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 42,
                                        "endLine": 42,
                                        "snippet": "<div id=\"ccm-<?=$searchInstance?>-search-overlay\" class=\"ccm-ui\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 43,
                                        "endLine": 43,
                                        "snippet": "\t<input type=\"hidden\" name=\"dialogAction\" value=\"<?=REL_DIR_FILES_TOOLS_REQUIRED?>/files/search_dialog?ocID=<?=$_REQUEST['ocID']?>&searchInstance=<?=$searchInstance?>&disable_choose=<?=$_REQUEST['disable_choose']?>\" />"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 43,
                                        "endLine": 43,
                                        "snippet": "\t<input type=\"hidden\" name=\"dialogAction\" value=\"<?=REL_DIR_FILES_TOOLS_REQUIRED?>/files/search_dialog?ocID=<?=$_REQUEST['ocID']?>&searchInstance=<?=$searchInstance?>&disable_choose=<?=$_REQUEST['disable_choose']?>\" />"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 43,
                                        "endLine": 43,
                                        "snippet": "\t<input type=\"hidden\" name=\"dialogAction\" value=\"<?=REL_DIR_FILES_TOOLS_REQUIRED?>/files/search_dialog?ocID=<?=$_REQUEST['ocID']?>&searchInstance=<?=$searchInstance?>&disable_choose=<?=$_REQUEST['disable_choose']?>\" />"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 45,
                                        "endLine": 45,
                                        "snippet": "<div class=\"ccm-pane-options\" id=\"ccm-<?=$searchInstance?>-pane-options\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 62,
                                        "snippet": "print '<script type=\"text/javascript\">\n$(function() {\n\tccm_activateFileManager(\\'' . $alType . '\\', \\'' . $searchInstance . '\\');\n});\n</script>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1558_0.rb",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 40,
                                        "endLine": 40,
                                        "snippet": "      cookies[:locale] = {"
                                    }
                                }
                            ],
                            "message": "Cookie secure is not set explicitly and defaults to false. Set it to true to ensure the cookie is only sent via HTTPS and help protect from man-in-the-middle attacks.",
                            "ruleId": "ruby/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 40,
                                        "endLine": 40,
                                        "snippet": "      cookies[:locale] = {"
                                    }
                                }
                            ],
                            "message": "Cookie httponly is not set explicitly and defaults to false. Set it to true to protect the cookie from malicious client-side JavaScript code.",
                            "ruleId": "ruby/WebCookieHttpOnlyDisabledByDefault"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_441_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5350_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_269_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3134_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4974_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 66,
                                        "endLine": 66,
                                        "snippet": "    echo $data;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 73,
                                        "endLine": 73,
                                        "snippet": "    echo urldecode($_REQUEST['monitorconfig']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 31,
                                        "endLine": 31,
                                        "snippet": "    if (! preg_match($valid_match, $_REQUEST['filename'])) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized user input from an HTTP parameter flows into preg_match, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
                            "ruleId": "php/reDOS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5159_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1671_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_103_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 74,
                                        "endLine": 129,
                                        "snippet": "\techo <<<WSDL\n<?xml version =\"1.0\" encoding =\"UTF-8\" ?>\n<definitions name=\"LogoutNotification\"\n  targetNamespace=\"urn:mace:shibboleth:2.0:sp:notify\"\n  xmlns:notify=\"urn:mace:shibboleth:2.0:sp:notify\"\n  xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"\n  xmlns=\"http://schemas.xmlsoap.org/wsdl/\">\n\n\t<types>\n\t   <schema targetNamespace=\"urn:mace:shibboleth:2.0:sp:notify\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5789_1.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5680_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 47,
                                        "endLine": 47,
                                        "snippet": "                Jojo::updateQuery(\"UPDATE {user} SET us_password = ?, us_salt='', us_reminder='', us_reset='' WHERE userid = ? LIMIT 1\", array(sha1($newpassword), $userid));"
                                    }
                                }
                            ],
                            "message": "SHA1 hash (used in sha1) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4286_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3332_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5813_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5443_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5185_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2280_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1519_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3606_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2350_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 75,
                                        "endLine": 75,
                                        "snippet": "\t\t\t\t\t$db->query('UPDATE `' . table_users . \"` SET `user_pass` = '$saltedPass' WHERE `user_login` = '\".$user->user_login.\"'\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 76,
                                        "endLine": 76,
                                        "snippet": "\t\t\t\t\t$db->query('UPDATE `' . table_users . '` SET `last_reset_request` = FROM_UNIXTIME('.time().') WHERE `user_login` = \"'.$user->user_login.'\"');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3292_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1240_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3741_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4542_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3310_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2857_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2754_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4229_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4712_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5553_0.rb",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 167,
                                        "endLine": 167,
                                        "snippet": "        OpenSSL::HMAC.hexdigest(OpenSSL::Digest::SHA1.new, secret, data)"
                                    }
                                }
                            ],
                            "message": "Weak hashing algorithm (OpenSSL.Digest.SHA1.new) used in OpenSSL.HMAC.hexdigest for possible secret value secret.",
                            "ruleId": "ruby/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1249_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3480_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4594_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5872_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4662_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4371_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3723_0.py",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 114,
                                        "endLine": 114,
                                        "snippet": "            return shortcuts.redirect(redirect)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into django.shortcuts.redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "python/OR"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 179,
                                        "endLine": 179,
                                        "snippet": "        return shortcuts.redirect(redirect)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into django.shortcuts.redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "python/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1978_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_980_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_753_0.py",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "        self.redirect(url)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "python/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4244_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_752_0.py",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 59,
                                        "endLine": 59,
                                        "snippet": "        self.redirect(url)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "python/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5567_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4104_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1379_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5447_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_781_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3586_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4608_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3700_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4178_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 69,
                                        "endLine": 69,
                                        "snippet": "    return crypto.createHash('sha1').update(`${opts.locale}|${opts.path}|${opts.privateNS}`).digest('hex')"
                                    }
                                }
                            ],
                            "message": "sha1 hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "javascript/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4686_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2170_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4309_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2092_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4453_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5552_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1904_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 190,
                                        "endLine": 190,
                                        "snippet": "   echo $itemtype::getFormURLWithID($_REQUEST['items_id'], true).\"&forcetab={$tab_id}\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_555_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4708_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2274_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 133,
                                        "endLine": 133,
                                        "snippet": "\t\t   echo gce_print_calendar( $ids, 'grid', $args );"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 136,
                                        "endLine": 136,
                                        "snippet": "\t\t   echo gce_print_calendar( $ids, 'grid', $args );"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 199,
                                        "endLine": 199,
                                        "snippet": "\techo $d->get_list( $grouped, $start, $paging, $paging_interval, $start_offset );"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1545_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1250_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_271_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2501_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1536_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3559_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 92,
                                        "endLine": 92,
                                        "snippet": "            echo '<pre>';"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 93,
                                        "endLine": 93,
                                        "snippet": "            echo $this->__toString();"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 94,
                                        "endLine": 94,
                                        "snippet": "            echo \"\\n\\n\\nError happened while handling exception:\";"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 95,
                                        "endLine": 95,
                                        "snippet": "            echo $e->__toString();"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 96,
                                        "endLine": 96,
                                        "snippet": "            echo '</pre>';"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_873_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 103,
                                        "endLine": 103,
                                        "snippet": "        response.setHeader(\"ETag\", etag);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from the request URL flows into setHeader and reaches an HTTP header returned to the user. This may allow a malicious input that contain CR/LF to split the http response into two responses and the second response to be controlled by the attacker. This may be used to mount a range of attacks such as cross-site scripting or cache poisoning.",
                            "ruleId": "java/HttpResponseSplitting"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3333_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4640_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4386_0.py",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 60,
                                        "endLine": 60,
                                        "snippet": "        self.redirect(url)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "python/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_848_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1344_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3490_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_979_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2733_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3593_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5188_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_135_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_564_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_778_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1385_1.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3719_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_416_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4601_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 26,
                                        "endLine": 26,
                                        "snippet": "        $ret = exec($cmd,$output);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into exec, where it is used to build a shell command. This may result in a Command Injection vulnerability.",
                            "ruleId": "php/CommandInjection"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2110_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_802_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4969_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2374_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2412_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3810_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 10,
                                        "endLine": 10,
                                        "snippet": "    header(\"Location: $proto$host$url\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4923_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_789_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4129_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4115_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2053_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2228_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3795_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1408_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 54,
                                        "endLine": 54,
                                        "snippet": "    <div id=\"content\" style=\"width:<?php echo $monitor->Width() ?>px; height:<?php echo $monitor->Height() ?>px; position:relative; margin: 0 auto;\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 54,
                                        "endLine": 54,
                                        "snippet": "    <div id=\"content\" style=\"width:<?php echo $monitor->Width() ?>px; height:<?php echo $monitor->Height() ?>px; position:relative; margin: 0 auto;\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "        <input type=\"hidden\" name=\"mid\" value=\"<?php echo $mid ?>\"/>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 60,
                                        "endLine": 60,
                                        "snippet": "          <?php echo makePopupButton('?view=zone&mid=' . $mid . '&zid=0', 'zmZone', array('zone', $monitor->Width(), $monitor->Height()), translate('AddNewZone'), canEdit('Monitors')); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 77,
                                        "endLine": 77,
                                        "snippet": "              <td class=\"colName\"><?php echo makePopupLink('?view=zone&mid=' . $mid . '&zid=' . $zone['Id'], 'zmZone', array('zone', $monitor->Width(), $monitor->Height()), validHtmlStr($zone['Name']), true, 'onclick=\"streamCmdQuit( true ); return( false );\"'); ?></td>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 78,
                                        "endLine": 78,
                                        "snippet": "              <td class=\"colType\"><?php echo validHtmlStr($zone['Type']) ?></td>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 79,
                                        "endLine": 79,
                                        "snippet": "              <td class=\"colUnits\"><?php echo $zone['Area'] ?>&nbsp;/&nbsp;<?php echo sprintf( \"%.2f\", ($zone['Area']*100)/($monitor->Width()*$monitor->Height()) ) ?></td>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 79,
                                        "endLine": 79,
                                        "snippet": "              <td class=\"colUnits\"><?php echo $zone['Area'] ?>&nbsp;/&nbsp;<?php echo sprintf( \"%.2f\", ($zone['Area']*100)/($monitor->Width()*$monitor->Height()) ) ?></td>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 80,
                                        "endLine": 80,
                                        "snippet": "              <td class=\"colMark\"><input type=\"checkbox\" name=\"markZids[]\" value=\"<?php echo $zone['Id'] ?>\" data-on-click-this=\"configureDeleteButton\"<?php if ( !canEdit( 'Monitors' ) ) { ?> disabled=\"disabled\"<?php } ?>/></td>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 88,
                                        "endLine": 88,
                                        "snippet": "        <?php echo getStreamHTML( $monitor ); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 89,
                                        "endLine": 89,
                                        "snippet": "        <svg class=\"zones\" width=\"<?php echo $monitor->Width() ?>\" height=\"<?php echo $monitor->Height() ?>\" style=\"position:absolute; top: 0; left: 0; background: none;\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 89,
                                        "endLine": 89,
                                        "snippet": "        <svg class=\"zones\" width=\"<?php echo $monitor->Width() ?>\" height=\"<?php echo $monitor->Height() ?>\" style=\"position:absolute; top: 0; left: 0; background: none;\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 93,
                                        "endLine": 93,
                                        "snippet": "          <polygon points=\"<?php echo $zone['AreaCoords'] ?>\" class=\"popup-link <?php echo $zone['Type']?>\" onclick=\"streamCmdQuit( true ); return( false );\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 93,
                                        "endLine": 93,
                                        "snippet": "          <polygon points=\"<?php echo $zone['AreaCoords'] ?>\" class=\"popup-link <?php echo $zone['Type']?>\" onclick=\"streamCmdQuit( true ); return( false );\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 94,
                                        "endLine": 94,
                                        "snippet": "                   data-url=\"?view=zone&amp;mid=<?php echo $mid ?>&amp;zid=<?php echo $zone['Id'] ?>\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 94,
                                        "endLine": 94,
                                        "snippet": "                   data-url=\"?view=zone&amp;mid=<?php echo $mid ?>&amp;zid=<?php echo $zone['Id'] ?>\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 97,
                                        "endLine": 97,
                                        "snippet": "                   data-window-width=\"<?php echo $monitor->Width ?>\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 98,
                                        "endLine": 98,
                                        "snippet": "                   data-window-height=\"<?php echo $monitor->Height ?>\"/>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 55,
                                        "endLine": 55,
                                        "snippet": "      <form name=\"contentForm\" id=\"contentForm\" method=\"get\" action=\"<?php echo $_SERVER['PHP_SELF'] ?>\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1110_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4261_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5373_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5753_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1139_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1015_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_810_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4512_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_838_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1141_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1251_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5426_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4976_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 33,
                                        "endLine": 33,
                                        "snippet": "    echo $html;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 55,
                                        "endLine": 55,
                                        "snippet": "    echo $html;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2957_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5764_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1264_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5873_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1501_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4687_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1738_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3842_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3759_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2743_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_783_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2214_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1126_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 92,
                                        "endLine": 92,
                                        "snippet": "\t\t\t\techo gettext(\"No entry exists for this username:\") . \" \" . $_POST['username'] . \"\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 115,
                                        "endLine": 115,
                                        "snippet": "\t\t\t\techo gettext(\"No entry exists for this mac address:\") . \" \" . $_POST['delmac'] . \"\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1709_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4682_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3706_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4176_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4672_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4323_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3861_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_378_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 26,
                                        "endLine": 26,
                                        "snippet": "\t\t$page->layout = str_replace ('</head>', '<style>' . strip_tags (file_get_contents ($_GET['css'])) . '</style></head>', $page->layout);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 19,
                                        "endLine": 19,
                                        "snippet": "\t\t\t\t$page->layout = file_get_contents ('layouts/' . $_GET['layout'] . '.html');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 21,
                                        "endLine": 21,
                                        "snippet": "\t\t\t\t$page->layout = file_get_contents ('layouts/' . $_GET['layout'] . '/' . $_GET['layout'] . '.html');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 26,
                                        "endLine": 26,
                                        "snippet": "\t\t$page->layout = str_replace ('</head>', '<style>' . strip_tags (file_get_contents ($_GET['css'])) . '</style></head>', $page->layout);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 32,
                                        "endLine": 32,
                                        "snippet": "\t\t\t\t$page->layout = file_get_contents ('layouts/' . $_POST['layout'] . '.html');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 34,
                                        "endLine": 34,
                                        "snippet": "\t\t\t\t$page->layout = file_get_contents ('layouts/' . $_POST['layout'] . '/' . $_POST['layout'] . '.html');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5586_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4974_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 66,
                                        "endLine": 66,
                                        "snippet": "    echo $data;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 71,
                                        "endLine": 71,
                                        "snippet": "    echo urldecode($_REQUEST['monitorconfig']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 31,
                                        "endLine": 31,
                                        "snippet": "    if (! preg_match($valid_match, $_REQUEST['filename'])) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized user input from an HTTP parameter flows into preg_match, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
                            "ruleId": "php/reDOS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3134_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4652_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_543_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4192_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5237_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_808_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 174,
                                        "endLine": 174,
                                        "snippet": "\t\t\t\t\t\trename($_SESSION['switch']['recordings']['dir'].\"/archive/\".date(\"Y\").\"/\".date(\"M\").\"/\".date(\"d\").\"/\".$_GET[\"uuid\"].\".wav\", $dest_file);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into rename, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to move arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3235_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 41,
                                        "endLine": 41,
                                        "snippet": "\t<div id=\"ccm-<?=$searchInstance?>-overlay-wrapper\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 43,
                                        "endLine": 43,
                                        "snippet": "<div id=\"ccm-<?=$searchInstance?>-search-overlay\" class=\"ccm-ui\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 44,
                                        "endLine": 44,
                                        "snippet": "\t<input type=\"hidden\" name=\"dialogAction\" value=\"<?=REL_DIR_FILES_TOOLS_REQUIRED?>/files/search_dialog?ocID=<?=$ocID?>&amp;searchInstance=<?=$searchInstance?>&amp;disable_choose=<?=$disable_choose?>\" />"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 44,
                                        "endLine": 44,
                                        "snippet": "\t<input type=\"hidden\" name=\"dialogAction\" value=\"<?=REL_DIR_FILES_TOOLS_REQUIRED?>/files/search_dialog?ocID=<?=$ocID?>&amp;searchInstance=<?=$searchInstance?>&amp;disable_choose=<?=$disable_choose?>\" />"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 44,
                                        "endLine": 44,
                                        "snippet": "\t<input type=\"hidden\" name=\"dialogAction\" value=\"<?=REL_DIR_FILES_TOOLS_REQUIRED?>/files/search_dialog?ocID=<?=$ocID?>&amp;searchInstance=<?=$searchInstance?>&amp;disable_choose=<?=$disable_choose?>\" />"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 46,
                                        "endLine": 46,
                                        "snippet": "<div class=\"ccm-pane-options\" id=\"ccm-<?=$searchInstance?>-pane-options\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 59,
                                        "endLine": 63,
                                        "snippet": "print '<script type=\"text/javascript\">\n$(function() {\n\tccm_activateFileManager(\\'' . $alType . '\\', \\'' . $searchInstance . '\\');\n});\n</script>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4977_0.phtml",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 64,
                                        "endLine": 66,
                                        "snippet": "echo PMA_Util::linkOrButton(\n    $url, $title . $order_img, $order_link_params\n);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1266_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1899_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_559_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5443_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5028_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5680_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 47,
                                        "endLine": 47,
                                        "snippet": "                Jojo::updateQuery(\"UPDATE {user} SET us_password = ?, us_salt='', us_reminder='', us_reset='' WHERE userid = ? LIMIT 1\", array(sha1($newpassword), $userid));"
                                    }
                                }
                            ],
                            "message": "SHA1 hash (used in sha1) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_189_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 161,
                                        "endLine": 161,
                                        "snippet": "            userPassword: bcrypt.hashSync(req.body.userPassword, 10),"
                                    }
                                }
                            ],
                            "message": "Hardcoded value is used as a salt (in bcryptjs.hashSync). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
                            "ruleId": "javascript/HardcodedSecret"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 68,
                                        "snippet": "router.get('/admin/user/new', common.restrict, (req, res) => {\n    res.render('user_new', {\n        title: 'User - New',\n        admin: true,\n        session: req.session,\n        helpers: req.handlebars.helpers,\n        message: common.clearSessionValue(req.session, 'message'),\n        messageType: common.clearSessionValue(req.session, 'messageType'),\n        config: req.app.config\n    });\n});"
                                    }
                                }
                            ],
                            "message": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
                            "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4229_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_990_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3889_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_865_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4510_0.go",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 182,
                                        "endLine": 182,
                                        "snippet": "\t\t\toutFile, err := os.OpenFile(path, os.O_CREATE|os.O_RDWR, os.FileMode(header.Mode))"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from open tar file flows into os.OpenFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
                            "ruleId": "go/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3295_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2857_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3518_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1885_0.rs",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2350_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 75,
                                        "endLine": 75,
                                        "snippet": "\t\t\t\t\t$db->query('UPDATE `' . table_users . \"` SET `user_pass` = '$saltedPass' WHERE `user_login` = '\".$user->user_login.\"'\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 76,
                                        "endLine": 76,
                                        "snippet": "\t\t\t\t\t$db->query('UPDATE `' . table_users . '` SET `last_reset_request` = FROM_UNIXTIME('.time().') WHERE `user_login` = \"'.$user->user_login.'\"');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3288_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3606_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3292_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5410_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4244_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1978_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3976_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4371_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4662_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4594_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5357_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3561_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1845_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1737_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5664_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5149_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 134,
                                        "endLine": 134,
                                        "snippet": "    header(\"Location: $url\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1346_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4733_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5837_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2873_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 165,
                                        "endLine": 165,
                                        "snippet": "            echo '<p>'.$PMF_LANG['ad_att_fail'].'</p>';"
                                    }
                                }
                            ],
                            "message": "An exception object flows to the echo statement and is leaked to the attacker. This may disclose important information about the application to an attacker.",
                            "ruleId": "php/ServerLeak"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2999_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4928_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4909_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4262_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_409_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 27,
                                        "endLine": 27,
                                        "snippet": "\t\tsetcookie('bigtree_admin[recently_replaced_file]',true,time()+300,str_replace(DOMAIN,\"\",WWW_ROOT));"
                                    }
                                }
                            ],
                            "message": "setcookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
                            "ruleId": "php/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 27,
                                        "endLine": 27,
                                        "snippet": "\t\tsetcookie('bigtree_admin[recently_replaced_file]',true,time()+300,str_replace(DOMAIN,\"\",WWW_ROOT));"
                                    }
                                }
                            ],
                            "message": "setcookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
                            "ruleId": "php/WebCookieHttpOnlyDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 61,
                                        "endLine": 61,
                                        "snippet": "\t\t\t\t\t$md5 = md5_file($temp_name);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5_file) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1468_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2480_1.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1966_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4547_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3747_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3702_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3029_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4746_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1800_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3997_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2746_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5445_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3584_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1489_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 206,
                                        "endLine": 206,
                                        "snippet": "\t\t\t$student_pin = md5($addslashes($_POST['student_pin']));"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 232,
                                        "endLine": 232,
                                        "snippet": "\t\t\t$code = substr(md5($_POST['email'] . $now . $m_id), 0, 10);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2026_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_218_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4684_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 71,
                                        "endLine": 71,
                                        "snippet": "            char * const z = alias + strlen(alias) - 1U;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
                            "ruleId": "cpp/IntegerOverflow"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 83,
                                        "endLine": 83,
                                        "snippet": "                char * const z = dir + strlen(dir) - 1U;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
                            "ruleId": "cpp/IntegerOverflow"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3913_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1145_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 85,
                                        "endLine": 85,
                                        "snippet": "\t\t$result = $database->select($sql, $parameters, 'all');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into select, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 103,
                                        "endLine": 103,
                                        "snippet": "\t\t\t\techo th_order_by('device_setting_subcategory', $text['label-category'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 104,
                                        "endLine": 104,
                                        "snippet": "\t\t\t\techo th_order_by('device_setting_name', $text['label-type'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 105,
                                        "endLine": 105,
                                        "snippet": "\t\t\t\techo th_order_by('device_setting_value', $text['label-value'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 106,
                                        "endLine": 106,
                                        "snippet": "\t\t\t\techo th_order_by('device_setting_enabled', $text['label-enabled'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 107,
                                        "endLine": 107,
                                        "snippet": "\t\t\t\techo th_order_by('device_setting_description', $text['label-description'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 110,
                                        "endLine": 110,
                                        "snippet": "\t\t\t\t\techo \"\t<a href='device_setting_edit.php?device_uuid=\".$_GET['id'].\"' alt='\".$text['button-add'].\"'>$v_link_label_add</a>\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 148,
                                        "endLine": 148,
                                        "snippet": "\t\techo \"\t\t\t<a href='device_setting_edit.php?device_uuid=\".$_GET['id'].\"' alt='\".$text['button-add'].\"'>$v_link_label_add</a>\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_989_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5151_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3798_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2349_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 77,
                                        "endLine": 77,
                                        "snippet": "\t\t\t\t\t$db->query('UPDATE `' . table_users . \"` SET `user_pass` = '$saltedPass' WHERE `user_login` = '\".$user->user_login.\"'\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 78,
                                        "endLine": 78,
                                        "snippet": "\t\t\t\t\t$db->query('UPDATE `' . table_users . '` SET `last_reset_request` = FROM_UNIXTIME('.time().') WHERE `user_login` = \"'.$user->user_login.'\"');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1712_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_591_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 127,
                                        "endLine": 127,
                                        "snippet": "    const remoteConnection = await this._remoteProjectsService.createRemoteConnection("
                                    }
                                }
                            ],
                            "message": "Unsanitized input from the request URL flows into createRemoteConnection, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "javascript/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1756_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4502_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4175_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2003_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2277_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5596_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_784_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_957_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1488_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4152_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3585_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4180_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4016_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1577_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5444_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1464_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3403_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4952_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2917_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3422_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4068_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1129_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4471_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5394_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1929_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2906_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1676_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 50,
                                        "endLine": 50,
                                        "snippet": "            \twindow.opener.document.getElementById('<?php echo $returnid; ?>').focus();"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 51,
                                        "endLine": 51,
                                        "snippet": "                window.opener.document.getElementById('<?php echo $returnid; ?>').value=$url;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "\t\t\t\t\tif(typeof window.opener.<?php echo $func; ?> == 'function') {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 59,
                                        "endLine": 59,
                                        "snippet": "\t\t\t\t\t\twindow.opener.<?php echo $func; ?>('<?php echo $returnid; ?>');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 59,
                                        "endLine": 59,
                                        "snippet": "\t\t\t\t\t\twindow.opener.<?php echo $func; ?>('<?php echo $returnid; ?>');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 115,
                                        "endLine": 115,
                                        "snippet": "\techo '<div class=\"h5\">/ <a href=\"?CKEditorFuncNum='.$CKEditorFuncNum.'&amp;type='.$type.'\">uploads</a> / ';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 119,
                                        "endLine": 119,
                                        "snippet": "\t\t\techo '<a href=\"?path='.$urlPath.'&amp;CKEditorFuncNum='.$CKEditorFuncNum.'&amp;type='.$type.'&amp;func='.$func.'\">'.$pathPart.'</a> / ';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 141,
                                        "endLine": 141,
                                        "snippet": "\t\t\techo '<img src=\"template/images/folder.png\" width=\"11\" /> <a href=\"filebrowser.php?path='.$adm.'&amp;CKEditorFuncNum='.$CKEditorFuncNum.'&amp;type='.$type.$returnlink.'&amp;'.$funct.'\" title=\"'. $upload['name'] .'\"  ><strong>'.$upload['name'].'</strong></a>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 179,
                                        "endLine": 179,
                                        "snippet": "\t\t\techo ($thumb=='' ? '<td style=\"display: none\"></td>' : $thumb);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 180,
                                        "endLine": 180,
                                        "snippet": "\t\t\techo '<td><a '.$selectLink.' class=\"primarylink\">'.htmlspecialchars($upload['name']) .'</a>'.$thumbnailLink.'</td>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 187,
                                        "endLine": 187,
                                        "snippet": "\t\t\t\techo '<td style=\"width:70px;text-align:right;\"><span>'.$fileOwner['name'].'/'.$filePerms.'</span></td>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4010_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5862_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_848_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3815_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_958_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_604_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2443_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 125,
                                        "endLine": 125,
                                        "snippet": "    iplist = fopen(options->in_file, \"rb\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a command line argument flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitary files.",
                            "ruleId": "cpp/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 154,
                                        "endLine": 154,
                                        "snippet": "            FILE *oplist = fopen(options->out_file, \"wb\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a command line argument flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitary files.",
                            "ruleId": "cpp/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_719_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2319_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1347_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1460_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1465_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2470_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5489_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3998_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5148_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 134,
                                        "endLine": 134,
                                        "snippet": "    header(\"Location: $url\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_77_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 122,
                                        "endLine": 122,
                                        "snippet": "print '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\">';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2304_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4657_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2310_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2534_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2305_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5324_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1691_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3699_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5321_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3330_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2442_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5290_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_311_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 57,
                                        "endLine": 57,
                                        "snippet": "if (@move_uploaded_file ($_FILES['file']['tmp_name'], $root . $_POST['path'] . '/' . $_FILES['file']['name'])) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into move_uploaded_file, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to move arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "\t@chmod ($root . $_POST['path'] . '/' . $_FILES['file']['name'], 0666);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into chmod, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5654_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4482_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 48,
                                        "endLine": 48,
                                        "snippet": "                return $user ? ['success' => true, 'user' => $user, 'avatar'=> md5($user['email'])] : ['success' => false, 'error' => 'User not found'];"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 146,
                                        "endLine": 146,
                                        "snippet": "                'md5email' => md5($user['email']),"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4219_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2481_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_810_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1043_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3738_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_838_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3580_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5706_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4544_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1573_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 183,
                                        "endLine": 183,
                                        "snippet": "            strcpy(path_env, \"PATH=/usr/bin:/bin:\"BIN_DIR);"
                                    }
                                }
                            ],
                            "message": "Using strcpy can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative strncpy instead.",
                            "ruleId": "cpp/UnsafeFunctionStringHandling"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4651_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_29_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3402_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4729_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5407_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1142_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 73,
                                        "endLine": 73,
                                        "snippet": "\t\techo \"<a href='contact_note_edit.php?contact_uuid=\".$_GET['id'].\"' alt='\".$text['button-add'].\"'>$v_link_label_add</a>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2271_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_662_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5150_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2849_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5621_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4136_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5425_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_610_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4930_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3838_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4582_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1226_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1773_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "\t\tif ((p == options || p[-1] == ',') && p[length] == '=')"
                                    }
                                }
                            ],
                            "message": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
                            "ruleId": "cpp/DerefNull"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "\t\tif ((p == options || p[-1] == ',') && p[length] == '=')"
                                    }
                                }
                            ],
                            "message": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
                            "ruleId": "cpp/DerefNull"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 79,
                                        "endLine": 79,
                                        "snippet": "\t\tif ((p == options || p[-1] == ',') &&"
                                    }
                                }
                            ],
                            "message": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
                            "ruleId": "cpp/DerefNull"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 80,
                                        "endLine": 80,
                                        "snippet": "\t\t\t\t(p[length] == ',' || p[length] == '\\0'))"
                                    }
                                }
                            ],
                            "message": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
                            "ruleId": "cpp/DerefNull"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 80,
                                        "endLine": 80,
                                        "snippet": "\t\t\t\t(p[length] == ',' || p[length] == '\\0'))"
                                    }
                                }
                            ],
                            "message": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
                            "ruleId": "cpp/DerefNull"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5267_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3257_0.cxx",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4819_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3170_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5602_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3707_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4679_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3742_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 95,
                                        "endLine": 95,
                                        "snippet": "\t\t\t\t$token = md5($_POST[\"user\"].time().$_POST['password']);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_543_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4029_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5093_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_971_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4421_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1977_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5427_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3414_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_193_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3421_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2494_1.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4848_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3806_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2905_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3236_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 31,
                                        "endLine": 31,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$_REQUEST['fID']?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 31,
                                        "endLine": 31,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$_REQUEST['fID']?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 31,
                                        "endLine": 31,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$_REQUEST['fID']?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 31,
                                        "endLine": 31,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$_REQUEST['fID']?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 31,
                                        "endLine": 31,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$_REQUEST['fID']?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 31,
                                        "endLine": 31,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$_REQUEST['fID']?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 32,
                                        "endLine": 32,
                                        "snippet": "<div class=\"ccm-file-selected-thumbnail\"><?=$fv->getThumbnail(1)?></div>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 33,
                                        "endLine": 33,
                                        "snippet": "<div class=\"ccm-file-selected-data\"><div><?=$fv->getTitle()?></div><div></div></div>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3126_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4560_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4233_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5677_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1914_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4639_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3594_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1514_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4460_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3569_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4130_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2299_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_533_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 227,
                                        "endLine": 227,
                                        "snippet": "    chmod(name, mode, function (err) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to manipulate arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 231,
                                        "endLine": 231,
                                        "snippet": "      chown(name, header.uid, header.gid, cb)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to manipulate arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 256,
                                        "endLine": 256,
                                        "snippet": "      xfs.unlink(name, function () {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 263,
                                        "endLine": 263,
                                        "snippet": "      xfs.unlink(name, function () {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 257,
                                        "endLine": 257,
                                        "snippet": "        xfs.symlink(header.linkname, name, stat)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 266,
                                        "endLine": 266,
                                        "snippet": "        xfs.link(srcpath, name, function (err) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 268,
                                        "endLine": 268,
                                        "snippet": "            stream = xfs.createReadStream(srcpath)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 257,
                                        "endLine": 257,
                                        "snippet": "        xfs.symlink(header.linkname, name, stat)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to overwrite arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 266,
                                        "endLine": 266,
                                        "snippet": "        xfs.link(srcpath, name, function (err) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to overwrite arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 278,
                                        "endLine": 278,
                                        "snippet": "      var ws = xfs.createWriteStream(name)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to write to arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_64_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 38,
                                        "endLine": 38,
                                        "snippet": "    header(\"Location: /reset/?action=code&user=\".$_POST['user']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2229_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5265_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2794_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_708_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 15,
                                        "endLine": 15,
                                        "snippet": "    exec(\"pkg-config \" + opencv + \" \" + flag, function(error, stdout, stderr){"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a command line argument flows into child_process.exec, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
                            "ruleId": "javascript/IndirectCommandInjection"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1101_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4350_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4958_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2313_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3605_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2025_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4965_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3809_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1159_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 84,
                                        "endLine": 84,
                                        "snippet": "\t\techo \"\t\t\t\t<td>\".$folder.\"</td>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 93,
                                        "endLine": 93,
                                        "snippet": "\t\techo \"\t\t\t\t<td><input type='text' name='file' value='\".$file.\"'></td>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 97,
                                        "endLine": 97,
                                        "snippet": "\t\techo \"\t\t\t\t\t<input type='hidden' name='folder' value='$folder'>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "\t\tunlink($folder.'/'.$file);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into unlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_199_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2333_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_646_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4548_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5374_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2196_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1431_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3540_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5159_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_337_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 124,
                                        "endLine": 124,
                                        "snippet": "\t\t\t$out = fopen(\"{$filePath}.part\", $chunk == 0 ? \"wb\" : \"ab\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into fopen, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 162,
                                        "endLine": 162,
                                        "snippet": "\t\t$out = fopen(\"{$filePath}.part\", $chunk == 0 ? \"wb\" : \"ab\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into fopen, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 124,
                                        "endLine": 124,
                                        "snippet": "\t\t\t$out = fopen(\"{$filePath}.part\", $chunk == 0 ? \"wb\" : \"ab\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 162,
                                        "endLine": 162,
                                        "snippet": "\t\t$out = fopen(\"{$filePath}.part\", $chunk == 0 ? \"wb\" : \"ab\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 193,
                                        "endLine": 193,
                                        "snippet": "\t\trename(\"{$filePath}.part\", $filePath);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into rename, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to move arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_88_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4357_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4566_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1394_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2626_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 78,
                                        "endLine": 78,
                                        "snippet": "\t\t\tif (f != null && f.exists() && f.canRead()) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
                            "ruleId": "java/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 82,
                                        "endLine": 82,
                                        "snippet": "\t\t\t\tIOUtils.copy(new FileInputStream(f), writer, \"UTF-8\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "java/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3607_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4438_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2230_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2408_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3346_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5737_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1146_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1905_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5092_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2045_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3683_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_218_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4879_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3395_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4579_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3218_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2169_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3587_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 141,
                                        "endLine": 141,
                                        "snippet": "            require $folder.\"/\".$_POST[\"extension\"].\"/\".$_POST[\"extension\"].\".php\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into require, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 89,
                                        "endLine": 90,
                                        "snippet": "            echo \"<h2 class=\\\"preview-header\\\">\".__(\"Preview\").\"</h2>\\n\".\n                 \"<div class=\\\"preview-content\\\">\".$_POST['content'].\"</div>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 102,
                                        "endLine": 102,
                                        "snippet": "                echo __($info[\"confirm\"], $_POST['check']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3617_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5266_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 116,
                                        "endLine": 116,
                                        "snippet": "\t\tstrcpy(source_p->id, generate_uid());"
                                    }
                                }
                            ],
                            "message": "Using strcpy can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative strncpy instead.",
                            "ruleId": "cpp/UnsafeFunctionStringHandling"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5584_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 119,
                                        "endLine": 119,
                                        "snippet": "                    $res = rename($oldname, $newname);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into rename, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to move arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 94,
                                        "endLine": 94,
                                        "snippet": "            $md5 = md5(uniqid());"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1766_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5446_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2193_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2113_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1014_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5284_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5012_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2368_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_292_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4834_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1400_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4488_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3682_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_34_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1642_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2188_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2909_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5060_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3738_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2921_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3939_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4482_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 44,
                                        "endLine": 44,
                                        "snippet": "                return $user ? ['success' => true, 'user' => $user, 'avatar'=> md5($user['email'])] : ['success' => false, 'error' => 'User not found'];"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 137,
                                        "endLine": 137,
                                        "snippet": "            $user['md5email'] = md5($user['email']);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2481_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_647_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5290_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5407_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4563_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_625_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_641_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 137,
                                        "endLine": 137,
                                        "snippet": "        frame_codestream = (unsigned char*) malloc(sample->sample_size -"
                                    }
                                }
                            ],
                            "message": "Memory allocated by malloc may be leaked if the control flow reaches this return. The allocated memory does not seem to be freed on all possible execution paths.",
                            "ruleId": "cpp/MemoryLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 94,
                                        "endLine": 94,
                                        "snippet": "    file = fopen(argv[1], \"rb\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a command line argument flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitary files.",
                            "ruleId": "cpp/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 149,
                                        "endLine": 149,
                                        "snippet": "        outfile = fopen(outfilename, \"wb\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a command line argument flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitary files.",
                            "ruleId": "cpp/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5706_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_423_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_28_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4136_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4165_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5425_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1529_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2849_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_710_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 48,
                                        "endLine": 48,
                                        "snippet": "\t\t\t\t\t<strong><?php echo $lang['images']['name']; ?></strong> <?php echo $_FILES['imagefile']['name']; ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 52,
                                        "endLine": 52,
                                        "snippet": "\t\t\t\t\t<strong><?php echo $lang['images']['type']; ?></strong> <?php echo $_FILES['imagefile']['type']; ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 42,
                                        "endLine": 42,
                                        "snippet": "\t\tif (!copy($_FILES['imagefile']['tmp_name'], 'images/'.$_FILES['imagefile']['name']))"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 45,
                                        "endLine": 45,
                                        "snippet": "\t\t\tchmod('images/'.$_FILES['imagefile']['name'], 0666);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into chmod, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2492_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_662_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1142_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5042_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2277_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_988_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3990_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4009_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_609_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5394_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3237_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4923_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4216_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4068_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1129_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5444_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_180_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3585_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5020_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1488_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3570_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5726_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1999_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4442_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_913_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3394_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 98,
                                        "endLine": 98,
                                        "snippet": "\t  free(rr_name);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. rr_name may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 108,
                                        "endLine": 108,
                                        "snippet": "\t  free(rr_name);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. rr_name may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 136,
                                        "endLine": 136,
                                        "snippet": "\tfree(rr_name);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. rr_name may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 115,
                                        "endLine": 115,
                                        "snippet": "\t  && strcasecmp(rr_name, hostname) == 0)"
                                    }
                                }
                            ],
                            "message": "Use after free. rr_name is used in strcasecmp after it may already have been freed with <unknown>.",
                            "ruleId": "cpp/UseAfterFree"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4910_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4627_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4010_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1676_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 50,
                                        "endLine": 50,
                                        "snippet": "            \twindow.opener.document.getElementById('<?php echo $returnid; ?>').focus();"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 51,
                                        "endLine": 51,
                                        "snippet": "                window.opener.document.getElementById('<?php echo $returnid; ?>').value=$url;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 57,
                                        "endLine": 57,
                                        "snippet": "\t\t\t\t\tif(typeof window.opener.<?php echo $func; ?> == 'function') {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "\t\t\t\t\t\twindow.opener.<?php echo $func; ?>('<?php echo $returnid; ?>');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "\t\t\t\t\t\twindow.opener.<?php echo $func; ?>('<?php echo $returnid; ?>');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 114,
                                        "endLine": 114,
                                        "snippet": "\techo '<div class=\"h5\">/ <a href=\"?CKEditorFuncNum='.$CKEditorFuncNum.'&amp;type='.$type.'\">uploads</a> / ';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 118,
                                        "endLine": 118,
                                        "snippet": "\t\t\techo '<a href=\"?path='.$urlPath.'&amp;CKEditorFuncNum='.$CKEditorFuncNum.'&amp;type='.$type.'&amp;func='.$func.'\">'.$pathPart.'</a> / ';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 140,
                                        "endLine": 140,
                                        "snippet": "\t\t\techo '<img src=\"template/images/folder.png\" width=\"11\" /> <a href=\"filebrowser.php?path='.$adm.'&amp;CKEditorFuncNum='.$CKEditorFuncNum.'&amp;type='.$type.$returnlink.'&amp;'.$funct.'\" title=\"'. $upload['name'] .'\"  ><strong>'.$upload['name'].'</strong></a>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 178,
                                        "endLine": 178,
                                        "snippet": "\t\t\techo ($thumb=='' ? '<td style=\"display: none\"></td>' : $thumb);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 179,
                                        "endLine": 179,
                                        "snippet": "\t\t\techo '<td><a '.$selectLink.' class=\"primarylink\">'.htmlspecialchars($upload['name']) .'</a>'.$thumbnailLink.'</td>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 186,
                                        "endLine": 186,
                                        "snippet": "\t\t\t\techo '<td style=\"width:70px;text-align:right;\"><span>'.$fileOwner['name'].'/'.$filePerms.'</span></td>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2068_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3404_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5148_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 136,
                                        "endLine": 136,
                                        "snippet": "    header(\"Location: $url\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2167_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1502_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1347_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1460_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2892_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_584_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1795_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_293_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 158,
                                        "endLine": 158,
                                        "snippet": "\tlen = php_dirname(dirname, strlen(dirname));"
                                    }
                                }
                            ],
                            "message": "Potential improperly null terminated input from a pointer to an input buffer flows into strlen, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
                            "ruleId": "cpp/ImproperNullTermination"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1921_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1763_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1007_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4874_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 117,
                                        "endLine": 117,
                                        "snippet": "\t\tresponse.send( result );"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "javascript/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1540_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_27_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1159_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "\t\tunlink($folder.'/'.$file);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into unlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3638_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5859_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5268_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1710_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1991_1.ts",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4120_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 131,
                                        "endLine": 131,
                                        "snippet": "\t\t\t\treturn res.redirect(url + '?error=' + err.message + '#nodebb-comments');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from the HTTP request body flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "javascript/OR"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 134,
                                        "endLine": 134,
                                        "snippet": "\t\t\tres.redirect(url + '#nodebb-comments');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from the HTTP request body flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "javascript/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1772_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4353_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5739_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4566_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1637_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4977_0.phtml",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 68,
                                        "endLine": 70,
                                        "snippet": "echo PMA_Util::linkOrButton(\n    $url, $title . $order_img, $order_link_params\n);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5095_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4330_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4730_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5374_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3746_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1146_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 72,
                                        "endLine": 72,
                                        "snippet": "\t\techo \"<a href='contact_url_edit.php?contact_uuid=\".$_GET['id'].\"' alt='\".$text['button-add'].\"'>$v_link_label_add</a>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_206_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2230_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 7,
                                        "endLine": 7,
                                        "snippet": "<meta http-equiv=\"refresh\" content=\"60; url=<?php echo $_SERVER['REQUEST_URI'] ?>\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3221_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 282,
                                        "endLine": 282,
                                        "snippet": "\t\tunlink(outFileName);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a command line argument flows into unlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "cpp/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4389_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3962_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2368_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_472_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1807_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3770_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5446_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2113_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3587_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 141,
                                        "endLine": 141,
                                        "snippet": "            require $folder.\"/\".$_POST[\"extension\"].\"/\".$_POST[\"extension\"].\".php\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into require, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 89,
                                        "endLine": 90,
                                        "snippet": "            echo \"<h2 class=\\\"preview-header\\\">\".__(\"Preview\").\"</h2>\\n\".\n                 \"<div class=\\\"preview-content\\\">\".fix($_POST['content']).\"</div>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 102,
                                        "endLine": 102,
                                        "snippet": "                echo __($info[\"confirm\"], $_POST['check']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5584_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 77,
                                        "endLine": 77,
                                        "snippet": "            exec ($command, $output = array (), $res);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into exec, where it is used to build a shell command. This may result in a Command Injection vulnerability.",
                            "ruleId": "php/CommandInjection"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 84,
                                        "endLine": 84,
                                        "snippet": "            exec ($command, $output = array (), $res);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into exec, where it is used to build a shell command. This may result in a Command Injection vulnerability.",
                            "ruleId": "php/CommandInjection"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 95,
                                        "endLine": 95,
                                        "snippet": "            exec ($command, $output = array (), $res);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into exec, where it is used to build a shell command. This may result in a Command Injection vulnerability.",
                            "ruleId": "php/CommandInjection"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 117,
                                        "endLine": 117,
                                        "snippet": "                    $res = rename($oldname, $newname);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into rename, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to move arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 92,
                                        "endLine": 92,
                                        "snippet": "            $md5 = md5(uniqid());"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3218_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_440_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4579_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5334_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4618_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1690_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3395_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4029_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2314_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 102,
                                        "endLine": 102,
                                        "snippet": "\t\trc = recv(s, buf, (len - rlen), 0);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a remote resource flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
                            "ruleId": "cpp/IntegerOverflow"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2168_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2956_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_441_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3707_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3742_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 95,
                                        "endLine": 95,
                                        "snippet": "\t\t\t\t$token = md5($_POST[\"user\"].time().$_POST['password']);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2094_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3257_0.cxx",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4445_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1226_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4582_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3814_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3236_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 32,
                                        "endLine": 32,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$fID?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 32,
                                        "endLine": 32,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$fID?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 32,
                                        "endLine": 32,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$fID?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 32,
                                        "endLine": 32,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$fID?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 32,
                                        "endLine": 32,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$fID?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 32,
                                        "endLine": 32,
                                        "snippet": "<div class=\"ccm-file-selected\" fID=\"<?=$fID?>\" ccm-file-manager-field=\"<?=$selectedField?>\" ccm-file-manager-can-duplicate=\"<?=$fp->canCopyFile()?>\" ccm-file-manager-can-admin=\"<?=($fp->canEditFilePermissions())?>\" ccm-file-manager-can-delete=\"<?=$fp->canDeleteFile()?>\" ccm-file-manager-can-view=\"<?=$canViewInline?>\" ccm-file-manager-can-replace=\"<?=$fp->canEditFileContents()?>\" ccm-file-manager-can-edit=\"<?=$canEdit?>\"  >"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 33,
                                        "endLine": 33,
                                        "snippet": "<div class=\"ccm-file-selected-thumbnail\"><?=$fv->getThumbnail(1)?></div>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 34,
                                        "endLine": 34,
                                        "snippet": "<div class=\"ccm-file-selected-data\"><div><?=$fv->getTitle()?></div><div></div></div>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4848_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5427_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4862_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_447_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1381_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_697_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5151_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1514_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3594_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4622_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4306_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4153_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5710_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4560_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4350_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3188_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3605_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5265_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3163_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 207,
                                        "endLine": 207,
                                        "snippet": "\t\t\tfree (reloc_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 212,
                                        "endLine": 212,
                                        "snippet": "\t\t\tfree (reloc_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 219,
                                        "endLine": 219,
                                        "snippet": "\t\t\tfree (reloc_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 233,
                                        "endLine": 233,
                                        "snippet": "\t\t\t\t\tfree (reloc_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 242,
                                        "endLine": 242,
                                        "snippet": "\t\t\t\t\tfree (reloc_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 220,
                                        "endLine": 220,
                                        "snippet": "\t\t\tfree (reloc_pointer_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_pointer_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 234,
                                        "endLine": 234,
                                        "snippet": "\t\t\t\t\tfree (reloc_pointer_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_pointer_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 243,
                                        "endLine": 243,
                                        "snippet": "\t\t\t\t\tfree (reloc_pointer_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_pointer_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 259,
                                        "endLine": 259,
                                        "snippet": "\t\tfree (reloc_pointer_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_pointer_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 217,
                                        "endLine": 217,
                                        "snippet": "\t\t\t\t     (ut8 *)reloc_pointer_table, amount);"
                                    }
                                }
                            ],
                            "message": "Use after free. _ is used in r_buf_read_at after it may already have been freed with <unknown>.",
                            "ruleId": "cpp/UseAfterFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 226,
                                        "endLine": 226,
                                        "snippet": "\t\t\t\tr_swap_ut32 (reloc_pointer_table[i]) +"
                                    }
                                }
                            ],
                            "message": "Use after free. reloc_pointer_table is used in _ after it may already have been freed with .",
                            "ruleId": "cpp/UseAfterFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 247,
                                        "endLine": 247,
                                        "snippet": "\t\t\t\treloc_table[i].addr_to_patch = reloc_offset;"
                                    }
                                }
                            ],
                            "message": "Use after free. reloc_table is used in _ after it may already have been freed with .",
                            "ruleId": "cpp/UseAfterFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 248,
                                        "endLine": 248,
                                        "snippet": "\t\t\t\treloc_table[i].data_offset = reloc_data_offset;"
                                    }
                                }
                            ],
                            "message": "Use after free. reloc_table is used in _ after it may already have been freed with .",
                            "ruleId": "cpp/UseAfterFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 253,
                                        "endLine": 253,
                                        "snippet": "\t\t\t\t\treloc->paddr = reloc_table[i].addr_to_patch;"
                                    }
                                }
                            ],
                            "message": "Use after free. reloc_table is used in _ after it may already have been freed with .",
                            "ruleId": "cpp/UseAfterFree"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1006_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2229_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 7,
                                        "endLine": 7,
                                        "snippet": "<meta http-equiv=\"refresh\" content=\"<?php echo $this->config->conf['refresh'] ?>; url=<?php echo $_SERVER['REQUEST_URI'] ?>\" />"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2098_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 50,
                                        "endLine": 50,
                                        "snippet": "        request.getSession().setAttribute(\"from\", targetUrl);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
                            "ruleId": "java/TrustBoundaryViolation"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 76,
                                        "endLine": 76,
                                        "snippet": "\t\trequest.getSession().setAttribute(\"from\", whereFrom);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
                            "ruleId": "java/TrustBoundaryViolation"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4549_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3023_0.scala",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_784_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_378_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 26,
                                        "endLine": 26,
                                        "snippet": "\t\t$page->layout = str_replace ('</head>', '<style>' . file_get_contents ($_GET['css']) . '</style></head>', $page->layout);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 19,
                                        "endLine": 19,
                                        "snippet": "\t\t\t\t$page->layout = file_get_contents ('layouts/' . $_GET['layout'] . '.html');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 21,
                                        "endLine": 21,
                                        "snippet": "\t\t\t\t$page->layout = file_get_contents ('layouts/' . $_GET['layout'] . '/' . $_GET['layout'] . '.html');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 26,
                                        "endLine": 26,
                                        "snippet": "\t\t$page->layout = str_replace ('</head>', '<style>' . file_get_contents ($_GET['css']) . '</style></head>', $page->layout);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 32,
                                        "endLine": 32,
                                        "snippet": "\t\t\t\t$page->layout = file_get_contents ('layouts/' . $_POST['layout'] . '.html');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 34,
                                        "endLine": 34,
                                        "snippet": "\t\t\t\t$page->layout = file_get_contents ('layouts/' . $_POST['layout'] . '/' . $_POST['layout'] . '.html');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1512_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5331_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2380_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 101,
                                        "endLine": 101,
                                        "snippet": "                           FRONTEND_LANGUAGE . '_' . md5($this->term) . '_' ."
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4192_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_808_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 193,
                                        "endLine": 193,
                                        "snippet": "\t\t\t\t\t\t\trename($_SESSION['switch']['recordings']['dir'].\"/archive/\".date(\"Y\").\"/\".date(\"M\").\"/\".date(\"d\").\"/\".$_GET[\"uuid\"].\".wav\", $dest_file);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into rename, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to move arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4502_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_591_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5383_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2906_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3422_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_499_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 27,
                                        "endLine": 27,
                                        "snippet": "        if (!file.exists())"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
                            "ruleId": "java/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 32,
                                        "endLine": 32,
                                        "snippet": "        try (InputStream inputStream = new FileInputStream(file); OutputStream os = response.getOutputStream()) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "java/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 42,
                                        "endLine": 42,
                                        "snippet": "                Files.delete(Paths.get(filePath));"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into java.nio.file.Files.delete, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "java/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1440_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1153_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2026_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3403_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1438_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_990_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1292_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 86,
                                        "endLine": 86,
                                        "snippet": "\techo \"<table cellpadding='0' cellspacing='0' border='0' align='right'><tr><td><input type='button' class='btn' alt='\".$text['button-back'].\"' onclick=\\\"document.location='fax_logs.php?id=\".$fax_uuid.\"'\\\" value='\".$text['button-back'].\"'></td></tr></table>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5536_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4510_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4573_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_603_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1885_0.rs",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1737_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2362_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1480_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2304_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2310_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2847_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5489_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3998_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_77_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 127,
                                        "endLine": 127,
                                        "snippet": "print '<form action=\"'.$_SERVER[\"PHP_SELF\"].'\" method=\"POST\">';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2319_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3976_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2443_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3561_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4138_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 74,
                                        "endLine": 74,
                                        "snippet": "\t\t\tinclude(dirname(__FILE__) . \"/src/bat/\" . $_GET[\"bat\"] . \".php\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into include, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4794_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 62,
                                        "endLine": 62,
                                        "snippet": "  include_once($filename);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into include_once, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2442_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_465_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3330_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_10_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5324_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5837_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2305_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3889_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2999_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3580_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4909_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4219_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1043_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_409_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 27,
                                        "endLine": 27,
                                        "snippet": "\t\tsetcookie('bigtree_admin[recently_replaced_file]',true,time()+300,str_replace(DOMAIN,\"\",WWW_ROOT));"
                                    }
                                }
                            ],
                            "message": "setcookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
                            "ruleId": "php/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 27,
                                        "endLine": 27,
                                        "snippet": "\t\tsetcookie('bigtree_admin[recently_replaced_file]',true,time()+300,str_replace(DOMAIN,\"\",WWW_ROOT));"
                                    }
                                }
                            ],
                            "message": "setcookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
                            "ruleId": "php/WebCookieHttpOnlyDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 60,
                                        "endLine": 60,
                                        "snippet": "\t\t\t\t\t$md5 = md5_file($temp_name);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5_file) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5654_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3748_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4575_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1294_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 171,
                                        "endLine": 171,
                                        "snippet": "\techo \"\t\t\t<input type='hidden' name='voicemail_greeting_uuid' value='\".$voicemail_greeting_uuid.\"'>\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 172,
                                        "endLine": 172,
                                        "snippet": "\techo \"\t\t\t<input type='hidden' name='voicemail_id' value='\".$voicemail_id.\"'>\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 173,
                                        "endLine": 173,
                                        "snippet": "\techo \"\t\t\t<input type='hidden' name='\".$token['name'].\"' value='\".$token['hash'].\"'>\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 103,
                                        "endLine": 103,
                                        "snippet": "\t\t\theader(\"Location: voicemail_greetings.php?id=\".$voicemail_id);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1966_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2811_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1403_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3775_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1573_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 183,
                                        "endLine": 183,
                                        "snippet": "            strcpy(path_env, \"PATH=/usr/bin:/bin:\"BIN_DIR);"
                                    }
                                }
                            ],
                            "message": "Using strcpy can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative strncpy instead.",
                            "ruleId": "cpp/UnsafeFunctionStringHandling"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1800_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3402_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3997_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4729_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_610_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3913_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3386_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5621_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_989_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1132_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 48,
                                        "endLine": 48,
                                        "snippet": "\techo $response;"
                                    }
                                }
                            ],
                            "message": "Sensitive data from a password flows into the echo statement, where it is leaked.",
                            "ruleId": "php/PrivacyLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 48,
                                        "endLine": 48,
                                        "snippet": "\techo $response;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_8_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1899_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2943_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2271_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1068_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 52,
                                        "endLine": 52,
                                        "snippet": "    $lines = file(\"{$_POST['systemRootPath']}install/database.sql\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 156,
                                        "endLine": 156,
                                        "snippet": "$fp = fopen($_POST['systemRootPath'] . \"videos/configuration.php\", \"wb\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into fopen, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 31,
                                        "endLine": 31,
                                        "snippet": "    if ($mysqli->query($sql) !== TRUE) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 52,
                                        "endLine": 52,
                                        "snippet": "    $lines = file(\"{$_POST['systemRootPath']}install/database.sql\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 156,
                                        "endLine": 156,
                                        "snippet": "$fp = fopen($_POST['systemRootPath'] . \"videos/configuration.php\", \"wb\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 83,
                                        "endLine": 83,
                                        "snippet": "$sql = \"INSERT INTO users (id, user, email, password, created, modified, isAdmin) VALUES (1, 'admin', '\" . $_POST['contactEmail'] . \"', '\" . md5($_POST['systemAdminPass']) . \"', now(), now(), true)\";"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4104_0.go",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 27,
                                        "endLine": 27,
                                        "snippet": "\t\t\thttp.Redirect(response, request, request.Header.Get(\"X-Forwarded-Prefix\")+\"/dashboard/\", http.StatusFound)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into net.http.Redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "go/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5602_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5123_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1773_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "\t\tif ((p == options || p[-1] == ',') && p[length] == '=')"
                                    }
                                }
                            ],
                            "message": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
                            "ruleId": "cpp/DerefNull"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "\t\tif ((p == options || p[-1] == ',') && p[length] == '=')"
                                    }
                                }
                            ],
                            "message": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
                            "ruleId": "cpp/DerefNull"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 79,
                                        "endLine": 79,
                                        "snippet": "\t\tif ((p == options || p[-1] == ',') &&"
                                    }
                                }
                            ],
                            "message": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
                            "ruleId": "cpp/DerefNull"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 80,
                                        "endLine": 80,
                                        "snippet": "\t\t\t\t(p[length] == ',' || p[length] == '\\0'))"
                                    }
                                }
                            ],
                            "message": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
                            "ruleId": "cpp/DerefNull"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 80,
                                        "endLine": 80,
                                        "snippet": "\t\t\t\t(p[length] == ',' || p[length] == '\\0'))"
                                    }
                                }
                            ],
                            "message": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
                            "ruleId": "cpp/DerefNull"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_972_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5157_0.phtml",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "            <?= (isset($collation[$i]) ? $collation[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 67,
                                        "endLine": 67,
                                        "snippet": "            <?= (isset($func[$i]) ? $func[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 71,
                                        "endLine": 71,
                                        "snippet": "            <?= (isset($value[$i]) ? $value[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5267_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3170_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4819_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1157_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4608_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3838_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4267_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 21,
                                        "endLine": 21,
                                        "snippet": "$content = url_get_contents($_GET['livelink']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into url_get_contents, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 33,
                                        "endLine": 33,
                                        "snippet": "    echo $line.PHP_EOL;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4178_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "    return crypto.createHash('sha1').update(`${opts.locale}|${opts.path}|${opts.privateNS}`).digest('hex')"
                                    }
                                }
                            ],
                            "message": "sha1 hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "javascript/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2941_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2905_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4144_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 134,
                                        "endLine": 134,
                                        "snippet": "\tinclude_once($shopConfigFilePath);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into include_once, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3883_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3421_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5552_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1738_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3414_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_193_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5093_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_271_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2501_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4421_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4568_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4130_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3569_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3333_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4386_0.py",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 55,
                                        "endLine": 55,
                                        "snippet": "        self.redirect(url)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "python/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4640_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_533_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 227,
                                        "endLine": 227,
                                        "snippet": "    chmod(name, mode, function (err) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to manipulate arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 231,
                                        "endLine": 231,
                                        "snippet": "      chown(name, header.uid, header.gid, cb)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to manipulate arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 256,
                                        "endLine": 256,
                                        "snippet": "      xfs.unlink(name, function () {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 263,
                                        "endLine": 263,
                                        "snippet": "      xfs.unlink(name, function () {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 257,
                                        "endLine": 257,
                                        "snippet": "        xfs.symlink(header.linkname, name, stat)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 266,
                                        "endLine": 266,
                                        "snippet": "        xfs.link(srcpath, name, function (err) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 268,
                                        "endLine": 268,
                                        "snippet": "            stream = xfs.createReadStream(srcpath)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 257,
                                        "endLine": 257,
                                        "snippet": "        xfs.symlink(header.linkname, name, stat)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to overwrite arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 266,
                                        "endLine": 266,
                                        "snippet": "        xfs.link(srcpath, name, function (err) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to overwrite arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 278,
                                        "endLine": 278,
                                        "snippet": "      var ws = xfs.createWriteStream(name)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from Tar-Stream library flows into <unknown>, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to write to arbitrary files.",
                            "ruleId": "javascript/ZipSlip"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1148_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 51,
                                        "endLine": 51,
                                        "snippet": "\t$result = $database->select($sql, $parameters, 'all');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into select, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 70,
                                        "endLine": 70,
                                        "snippet": "\techo th_order_by('profile_param_name', $text['label-profile_param_name'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 71,
                                        "endLine": 71,
                                        "snippet": "\techo th_order_by('profile_param_value', $text['label-profile_param_value'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 72,
                                        "endLine": 72,
                                        "snippet": "\techo th_order_by('profile_param_enabled', $text['label-profile_param_enabled'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 73,
                                        "endLine": 73,
                                        "snippet": "\techo th_order_by('profile_param_description', $text['label-profile_param_description'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 76,
                                        "endLine": 76,
                                        "snippet": "\t\techo \"<a href='conference_profile_param_edit.php?conference_profile_uuid=\".$_GET['id'].\"' alt='\".$text['button-add'].\"'>$v_link_label_add</a>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 116,
                                        "endLine": 116,
                                        "snippet": "\t\techo \t\t\"<a href='conference_profile_param_edit.php?conference_profile_uuid=\".$_GET['id'].\"' alt='\".$text['button-add'].\"'>$v_link_label_add</a>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2000_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2981_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 59,
                                        "endLine": 59,
                                        "snippet": "  $result = pwg_query($query);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into pwg_query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3490_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5677_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_659_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4796_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5611_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 114,
                                        "endLine": 114,
                                        "snippet": "        <?php echo $visualization; ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 121,
                                        "endLine": 121,
                                        "snippet": "            <?php echo (PMA_GIS_visualizationResults($data, $visualizationSettings, 'ol')); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_979_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4233_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2313_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5398_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1385_1.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2794_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2366_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_708_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_315_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_64_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 38,
                                        "endLine": 38,
                                        "snippet": "    header(\"Location: /reset/?action=code&user=\".$_POST['user']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2110_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2325_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_646_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2333_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2733_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4129_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4115_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4571_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3709_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4965_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3795_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1110_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1394_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4979_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 31,
                                        "endLine": 34,
                                        "snippet": "        echo PMA_updateOneColumn(\n            $db, $orig_col_name, $col_name, $col_type, $col_attribute,\n            $col_length, $col_isNull, $collation, $col_extra, $col_default\n        );"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 45,
                                        "endLine": 45,
                                        "snippet": "    echo PMA_getHTMLforColumnDropdown($db, $selected_tbl);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 49,
                                        "endLine": 49,
                                        "snippet": "    echo PMA_getCentralColumnsListRaw($db, $_POST['cur_table']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_88_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1034_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_497_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2793_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1431_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3540_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5753_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1015_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1418_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 34,
                                        "endLine": 34,
                                        "snippet": "            move_uploaded_file($sourcePath,$targetPath);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into move_uploaded_file, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to move arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4512_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_788_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4846_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 53,
                                        "endLine": 53,
                                        "snippet": "\t\t<p>Broken <?=(($type == \"img\") ? \"Image\" : \"Link\")?>: <?=$error?> in field &ldquo;<?=$form[\"fields\"][$field][\"title\"]?>&rdquo;</p>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4803_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 68,
                                        "endLine": 68,
                                        "snippet": "  include_once($filename);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into include_once, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1136_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 102,
                                        "endLine": 102,
                                        "snippet": "\tvar url = 'fifo_interactive_inc.php?c=<?php echo trim($_REQUEST[\"c\"]); ?>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5092_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2045_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2170_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1184_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2452_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2885_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2408_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3346_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5737_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5873_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5284_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1545_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1501_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4708_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_506_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3617_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5266_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 122,
                                        "endLine": 122,
                                        "snippet": "\t\tstrcpy(source_p->id, generate_uid());"
                                    }
                                }
                            ],
                            "message": "Using strcpy can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative strncpy instead.",
                            "ruleId": "cpp/UnsafeFunctionStringHandling"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3759_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1766_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2193_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1151_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 54,
                                        "endLine": 54,
                                        "snippet": "\t\t\t<b>file: <?php echo $filename ?></b>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 72,
                                        "endLine": 72,
                                        "snippet": "\t\t\t\techo \"<embed src=\\\"recordings.php?a=download&type=\".urlencode($type).\"&filename=\".urlencode($filename).\"\\\" autostart=\\\"true\\\" width=\\\"300\\\" height=\\\"90\\\" name=\\\"sound_\".$filename.\"\\\" enablejavascript=\\\"true\\\">\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1014_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1114_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "        return !(!array_key_exists('phpFastCache', $_COOKIE) && !@setcookie('phpFastCache', 1, 10));"
                                    }
                                }
                            ],
                            "message": "setcookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
                            "ruleId": "php/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 85,
                                        "endLine": 85,
                                        "snippet": "            return setcookie($keyword, $v, $item->getExpirationDate()->getTimestamp(), '/');"
                                    }
                                }
                            ],
                            "message": "setcookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
                            "ruleId": "php/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 143,
                                        "endLine": 143,
                                        "snippet": "            return @setcookie($keyword, null, -10);"
                                    }
                                }
                            ],
                            "message": "setcookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
                            "ruleId": "php/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 159,
                                        "endLine": 159,
                                        "snippet": "                $result = @setcookie($keyword, null, -10);"
                                    }
                                }
                            ],
                            "message": "setcookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
                            "ruleId": "php/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "        return !(!array_key_exists('phpFastCache', $_COOKIE) && !@setcookie('phpFastCache', 1, 10));"
                                    }
                                }
                            ],
                            "message": "setcookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
                            "ruleId": "php/WebCookieHttpOnlyDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 85,
                                        "endLine": 85,
                                        "snippet": "            return setcookie($keyword, $v, $item->getExpirationDate()->getTimestamp(), '/');"
                                    }
                                }
                            ],
                            "message": "setcookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
                            "ruleId": "php/WebCookieHttpOnlyDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 143,
                                        "endLine": 143,
                                        "snippet": "            return @setcookie($keyword, null, -10);"
                                    }
                                }
                            ],
                            "message": "setcookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
                            "ruleId": "php/WebCookieHttpOnlyDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 159,
                                        "endLine": 159,
                                        "snippet": "                $result = @setcookie($keyword, null, -10);"
                                    }
                                }
                            ],
                            "message": "setcookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
                            "ruleId": "php/WebCookieHttpOnlyDisabledByDefault"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4176_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4672_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2092_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1750_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_34_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_833_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_839_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1500_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_502_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4834_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5399_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_792_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3758_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2175_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4380_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4794_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 62,
                                        "endLine": 62,
                                        "snippet": "  include_once($filename);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into include_once, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1294_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 139,
                                        "endLine": 139,
                                        "snippet": "\techo \"\t<input type='button' class='btn' name='' alt='\".$text['button-back'].\"' onclick=\\\"window.location='voicemail_greetings.php?id=\".$voicemail_id.\"'\\\" value='\".$text['button-back'].\"'>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 172,
                                        "endLine": 172,
                                        "snippet": "\techo \"\t\t\t<input type='hidden' name='voicemail_greeting_uuid' value='\".$voicemail_greeting_uuid.\"'>\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 173,
                                        "endLine": 173,
                                        "snippet": "\techo \"\t\t\t<input type='hidden' name='voicemail_id' value='\".$voicemail_id.\"'>\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 174,
                                        "endLine": 174,
                                        "snippet": "\techo \"\t\t\t<input type='hidden' name='\".$token['name'].\"' value='\".$token['hash'].\"'>\\n\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 103,
                                        "endLine": 103,
                                        "snippet": "\t\t\theader(\"Location: voicemail_greetings.php?id=\".$voicemail_id);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1974_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4575_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_8_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3748_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4339_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1642_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5060_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2909_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5134_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_625_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5247_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3775_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1403_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 107,
                                        "endLine": 107,
                                        "snippet": "      <h2><?php echo translate('Monitor') ?> <?php echo $monitor['Name'] ?> - <?php echo translate('Zone') ?> <?php echo $newZone['Name'] ?> - <?php echo translate('Plugin') ?> <?php echo validHtmlStr($plugin) ?></h2>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 107,
                                        "endLine": 107,
                                        "snippet": "      <h2><?php echo translate('Monitor') ?> <?php echo $monitor['Name'] ?> - <?php echo translate('Zone') ?> <?php echo $newZone['Name'] ?> - <?php echo translate('Plugin') ?> <?php echo validHtmlStr($plugin) ?></h2>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 113,
                                        "endLine": 113,
                                        "snippet": "        <input type=\"hidden\" name=\"mid\" value=\"<?php echo $mid ?>\"/>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 110,
                                        "endLine": 110,
                                        "snippet": "      <form name=\"pluginForm\" id=\"pluginForm\" method=\"post\" action=\"<?php echo $_SERVER['PHP_SELF'] ?>\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2811_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2492_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2943_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4665_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1036_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1529_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_884_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1132_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 48,
                                        "endLine": 48,
                                        "snippet": "\techo $response;"
                                    }
                                }
                            ],
                            "message": "Sensitive data from a password flows into the echo statement, where it is leaked.",
                            "ruleId": "php/PrivacyLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 48,
                                        "endLine": 48,
                                        "snippet": "\techo $response;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3386_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3481_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5383_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4009_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2380_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 101,
                                        "endLine": 101,
                                        "snippet": "                           FRONTEND_LANGUAGE . '_' . md5($this->term) . '_' ."
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1397_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1558_0.rb",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 40,
                                        "endLine": 40,
                                        "snippet": "      cookies[:locale] = {"
                                    }
                                }
                            ],
                            "message": "Cookie secure is not set explicitly and defaults to false. Set it to true to ensure the cookie is only sent via HTTPS and help protect from man-in-the-middle attacks.",
                            "ruleId": "ruby/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 40,
                                        "endLine": 40,
                                        "snippet": "      cookies[:locale] = {"
                                    }
                                }
                            ],
                            "message": "Cookie httponly is not set explicitly and defaults to false. Set it to true to protect the cookie from malicious client-side JavaScript code.",
                            "ruleId": "ruby/WebCookieHttpOnlyDisabledByDefault"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_609_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_374_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_463_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5331_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2476_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1512_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1671_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_103_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 76,
                                        "endLine": 131,
                                        "snippet": "\techo <<<WSDL\n<?xml version =\"1.0\" encoding =\"UTF-8\" ?>\n<definitions name=\"LogoutNotification\"\n  targetNamespace=\"urn:mace:shibboleth:2.0:sp:notify\"\n  xmlns:notify=\"urn:mace:shibboleth:2.0:sp:notify\"\n  xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\"\n  xmlns=\"http://schemas.xmlsoap.org/wsdl/\">\n\n\t<types>\n\t   <schema targetNamespace=\"urn:mace:shibboleth:2.0:sp:notify\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5789_1.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3570_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_891_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 130,
                                        "endLine": 130,
                                        "snippet": "\texecv(path, (char * const*)argv);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a command line argument flows into execv, where it is used as a shell command. This may result in a Command Injection vulnerability.",
                            "ruleId": "cpp/CommandInjection"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1153_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1440_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_499_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 27,
                                        "endLine": 27,
                                        "snippet": "        if (!file.exists())"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
                            "ruleId": "java/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 32,
                                        "endLine": 32,
                                        "snippet": "        try (InputStream inputStream = new FileInputStream(file); OutputStream os = response.getOutputStream()) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "java/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 42,
                                        "endLine": 42,
                                        "snippet": "                Files.delete(Paths.get(filePath));"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into java.nio.file.Files.delete, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "java/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4216_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3332_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3237_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2280_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1519_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2068_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1480_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2362_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3404_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4542_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3741_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3394_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 98,
                                        "endLine": 98,
                                        "snippet": "\t  free(rr_name);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. rr_name may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 130,
                                        "endLine": 130,
                                        "snippet": "\tfree(rr_name);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. rr_name may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 109,
                                        "endLine": 109,
                                        "snippet": "\t  && strcasecmp(rr_name, hostname) == 0)"
                                    }
                                }
                            ],
                            "message": "Use after free. rr_name is used in strcasecmp after it may already have been freed with <unknown>.",
                            "ruleId": "cpp/UseAfterFree"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4573_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1292_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5536_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 1,
                                        "endLine": 1,
                                        "snippet": "<form action=\"<?php echo 'resetpassword.php?'.$_SERVER['QUERY_STRING']; ?>\" method=\"post\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5726_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4712_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5553_0.rb",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 167,
                                        "endLine": 167,
                                        "snippet": "        OpenSSL::HMAC.hexdigest(OpenSSL::Digest::SHA1.new, secret, data)"
                                    }
                                }
                            ],
                            "message": "Weak hashing algorithm (OpenSSL.Digest.SHA1.new) used in OpenSSL.HMAC.hexdigest for possible secret value secret.",
                            "ruleId": "ruby/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_392_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1438_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1763_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4138_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 74,
                                        "endLine": 74,
                                        "snippet": "\t\t\tinclude(dirname(__FILE__) . \"/src/bat/\" . $_GET[\"bat\"] . \".php\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into include, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1795_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3723_0.py",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 121,
                                        "endLine": 121,
                                        "snippet": "            return shortcuts.redirect(redirect)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into django.shortcuts.redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "python/OR"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 186,
                                        "endLine": 186,
                                        "snippet": "        return shortcuts.redirect(redirect)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into django.shortcuts.redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "python/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_980_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2847_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_827_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3709_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4571_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5268_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_27_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3638_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1007_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2325_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4846_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 51,
                                        "endLine": 51,
                                        "snippet": "\t\t<a href=\"<?=ADMIN_ROOT.$module[\"route\"].\"/\".$action[\"route\"].\"/\".$_GET[\"id\"]?>/\" target=\"_blank\">Edit</a>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 53,
                                        "endLine": 53,
                                        "snippet": "\t\t<p>Broken <?=(($type == \"img\") ? \"Image\" : \"Link\")?>: <?=$error?> in field &ldquo;<?=$form[\"fields\"][$field][\"title\"]?>&rdquo;</p>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4803_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 62,
                                        "endLine": 62,
                                        "snippet": "  include_once($filename);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into include_once, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_788_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4730_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1418_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 38,
                                        "endLine": 38,
                                        "snippet": "            move_uploaded_file($sourcePath,$targetPath);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into move_uploaded_file, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to move arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5739_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2793_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5095_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1034_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_497_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4509_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4979_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 31,
                                        "endLine": 34,
                                        "snippet": "        echo PMA_updateOneColumn(\n            $db, $orig_col_name, $col_name, $col_type, $col_attribute,\n            $col_length, $col_isNull, $collation, $col_extra, $col_default\n        );"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 45,
                                        "endLine": 45,
                                        "snippet": "    echo PMA_getHTMLforColumnDropdown($db, $selected_tbl);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 49,
                                        "endLine": 49,
                                        "snippet": "    echo PMA_getCentralColumnsListRaw($db, $_POST['cur_table']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1801_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3221_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4636_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1184_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2452_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4140_1.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2885_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4924_0.phtml",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 59,
                                        "endLine": 59,
                                        "snippet": "            <?php echo (isset($type[$i]) ? $type[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "            <?php echo (isset($collation[$i]) ? $collation[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 67,
                                        "endLine": 67,
                                        "snippet": "            <?php echo (isset($func[$i]) ? $func[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 71,
                                        "endLine": 71,
                                        "snippet": "            <?php echo (isset($value[$i]) ? $value[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 81,
                                        "endLine": 81,
                                        "snippet": "                    value=\"<?php echo $_POST['criteriaColumnTypes'][$i]; ?>\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_238_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1136_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 98,
                                        "endLine": 98,
                                        "snippet": "\tvar url = 'fifo_interactive_inc.php?c=<?php echo trim($_REQUEST[\"c\"]); ?>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_11_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5334_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4724_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2495_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1151_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1114_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "        return !(!array_key_exists('phpFastCache', $_COOKIE) && !@setcookie('phpFastCache', 1, 10));"
                                    }
                                }
                            ],
                            "message": "setcookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
                            "ruleId": "php/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 85,
                                        "endLine": 85,
                                        "snippet": "            return setcookie($keyword, $v, $item->getExpirationDate()->getTimestamp(), '/');"
                                    }
                                }
                            ],
                            "message": "setcookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
                            "ruleId": "php/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 143,
                                        "endLine": 143,
                                        "snippet": "            return @setcookie($keyword, null, -10);"
                                    }
                                }
                            ],
                            "message": "setcookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
                            "ruleId": "php/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 159,
                                        "endLine": 159,
                                        "snippet": "                $result = @setcookie($keyword, null, -10);"
                                    }
                                }
                            ],
                            "message": "setcookie misses the Secure attribute (it is false by default). Set it to true to protect the cookie from man-in-the-middle attacks.",
                            "ruleId": "php/WebCookieSecureDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "        return !(!array_key_exists('phpFastCache', $_COOKIE) && !@setcookie('phpFastCache', 1, 10));"
                                    }
                                }
                            ],
                            "message": "setcookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
                            "ruleId": "php/WebCookieHttpOnlyDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 85,
                                        "endLine": 85,
                                        "snippet": "            return setcookie($keyword, $v, $item->getExpirationDate()->getTimestamp(), '/');"
                                    }
                                }
                            ],
                            "message": "setcookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
                            "ruleId": "php/WebCookieHttpOnlyDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 143,
                                        "endLine": 143,
                                        "snippet": "            return @setcookie($keyword, null, -10);"
                                    }
                                }
                            ],
                            "message": "setcookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
                            "ruleId": "php/WebCookieHttpOnlyDisabledByDefault"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 159,
                                        "endLine": 159,
                                        "snippet": "                $result = @setcookie($keyword, null, -10);"
                                    }
                                }
                            ],
                            "message": "setcookie misses the HttpOnly attribute (it is false by default). Set it to true to protect the cookie from possible malicious code on client side.",
                            "ruleId": "php/WebCookieHttpOnlyDisabledByDefault"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3962_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5155_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1807_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_376_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3770_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4267_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 21,
                                        "endLine": 21,
                                        "snippet": "$content = url_get_contents($_GET['livelink']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into url_get_contents, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 33,
                                        "endLine": 33,
                                        "snippet": "    echo $line.PHP_EOL;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1157_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 86,
                                        "endLine": 86,
                                        "snippet": "\tvar url = 'conference_interactive_inc.php?c=<?php echo trim($_REQUEST[\"c\"]); ?>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_972_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2314_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 102,
                                        "endLine": 102,
                                        "snippet": "\t\trc = recv(s, buf, (len - rlen), 0);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a remote resource flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
                            "ruleId": "cpp/IntegerOverflow"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2956_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5123_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1068_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 56,
                                        "endLine": 56,
                                        "snippet": "    $lines = file(\"{$_POST['systemRootPath']}install/database.sql\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 160,
                                        "endLine": 160,
                                        "snippet": "$fp = fopen($_POST['systemRootPath'] . \"videos/configuration.php\", \"wb\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into fopen, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 35,
                                        "endLine": 35,
                                        "snippet": "    if ($mysqli->query($sql) !== TRUE) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 56,
                                        "endLine": 56,
                                        "snippet": "    $lines = file(\"{$_POST['systemRootPath']}install/database.sql\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 160,
                                        "endLine": 160,
                                        "snippet": "$fp = fopen($_POST['systemRootPath'] . \"videos/configuration.php\", \"wb\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 87,
                                        "endLine": 87,
                                        "snippet": "$sql = \"INSERT INTO users (id, user, email, password, created, modified, isAdmin) VALUES (1, 'admin', '\" . $_POST['contactEmail'] . \"', '\" . md5($_POST['systemAdminPass']) . \"', now(), now(), true)\";"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4568_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_750_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4521_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_676_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3865_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_447_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4862_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2930_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3494_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4144_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 134,
                                        "endLine": 134,
                                        "snippet": "\tinclude_once($shopConfigFilePath);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into include_once, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2941_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3883_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5076_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5710_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5611_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 113,
                                        "endLine": 113,
                                        "snippet": "    <div id=\"placeholder\" style=\"width:<?php echo($visualizationSettings['width']); ?>px;height:<?php echo($visualizationSettings['height']); ?>px;\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 113,
                                        "endLine": 113,
                                        "snippet": "    <div id=\"placeholder\" style=\"width:<?php echo($visualizationSettings['width']); ?>px;height:<?php echo($visualizationSettings['height']); ?>px;\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 114,
                                        "endLine": 114,
                                        "snippet": "        <?php echo $visualization; ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 121,
                                        "endLine": 121,
                                        "snippet": "            <?php echo (PMA_GIS_visualizationResults($data, $visualizationSettings, 'ol')); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4796_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2186_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2981_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 60,
                                        "endLine": 60,
                                        "snippet": "  $result = pwg_query($query);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into pwg_query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3528_0.rb",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 191,
                                        "endLine": 191,
                                        "snippet": "      regexp = file_list.body.match(/name=[\"']#{Regexp.quote params[:filename]}[\"'].*size=[\"']([^\"']*)[\"']/)"
                                    }
                                }
                            ],
                            "message": "Unsanitized user input from an HTTP parameter flows into regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
                            "ruleId": "ruby/reDOS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2000_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2100_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1148_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 51,
                                        "endLine": 51,
                                        "snippet": "\t$result = $database->select($sql, $parameters, 'all');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into select, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 70,
                                        "endLine": 70,
                                        "snippet": "\techo th_order_by('profile_param_name', $text['label-profile_param_name'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 71,
                                        "endLine": 71,
                                        "snippet": "\techo th_order_by('profile_param_value', $text['label-profile_param_value'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 72,
                                        "endLine": 72,
                                        "snippet": "\techo th_order_by('profile_param_enabled', $text['label-profile_param_enabled'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 73,
                                        "endLine": 73,
                                        "snippet": "\techo th_order_by('profile_param_description', $text['label-profile_param_description'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_697_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3163_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 212,
                                        "endLine": 212,
                                        "snippet": "\t\t\tfree (reloc_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 217,
                                        "endLine": 217,
                                        "snippet": "\t\t\tfree (reloc_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 224,
                                        "endLine": 224,
                                        "snippet": "\t\t\tfree (reloc_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 238,
                                        "endLine": 238,
                                        "snippet": "\t\t\t\t\tfree (reloc_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 247,
                                        "endLine": 247,
                                        "snippet": "\t\t\t\t\tfree (reloc_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 225,
                                        "endLine": 225,
                                        "snippet": "\t\t\tfree (reloc_pointer_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_pointer_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 239,
                                        "endLine": 239,
                                        "snippet": "\t\t\t\t\tfree (reloc_pointer_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_pointer_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 248,
                                        "endLine": 248,
                                        "snippet": "\t\t\t\t\tfree (reloc_pointer_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_pointer_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 264,
                                        "endLine": 264,
                                        "snippet": "\t\tfree (reloc_pointer_table);"
                                    }
                                }
                            ],
                            "message": "Potential double call to free. reloc_pointer_table may have already been freed by call to free.",
                            "ruleId": "cpp/DoubleFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 222,
                                        "endLine": 222,
                                        "snippet": "\t\t\t\t     (ut8 *)reloc_pointer_table, amount);"
                                    }
                                }
                            ],
                            "message": "Use after free. _ is used in r_buf_read_at after it may already have been freed with <unknown>.",
                            "ruleId": "cpp/UseAfterFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 231,
                                        "endLine": 231,
                                        "snippet": "\t\t\t\tr_swap_ut32 (reloc_pointer_table[i]) +"
                                    }
                                }
                            ],
                            "message": "Use after free. reloc_pointer_table is used in _ after it may already have been freed with .",
                            "ruleId": "cpp/UseAfterFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 252,
                                        "endLine": 252,
                                        "snippet": "\t\t\t\treloc_table[i].addr_to_patch = reloc_offset;"
                                    }
                                }
                            ],
                            "message": "Use after free. reloc_table is used in _ after it may already have been freed with .",
                            "ruleId": "cpp/UseAfterFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 253,
                                        "endLine": 253,
                                        "snippet": "\t\t\t\treloc_table[i].data_offset = reloc_data_offset;"
                                    }
                                }
                            ],
                            "message": "Use after free. reloc_table is used in _ after it may already have been freed with .",
                            "ruleId": "cpp/UseAfterFree"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 258,
                                        "endLine": 258,
                                        "snippet": "\t\t\t\t\treloc->paddr = reloc_table[i].addr_to_patch;"
                                    }
                                }
                            ],
                            "message": "Use after free. reloc_table is used in _ after it may already have been freed with .",
                            "ruleId": "cpp/UseAfterFree"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1006_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2366_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4469_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5398_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1997_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 146,
                                        "endLine": 146,
                                        "snippet": "\t\t\t\treturn \"redirect:\" + uriBuilder.toString();"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into here, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "java/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2381_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3188_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1355_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2213_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4874_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 120,
                                        "endLine": 120,
                                        "snippet": "\t\tresponse.send( result );"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "javascript/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4306_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2860_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2066_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1646_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 163,
                                        "endLine": 163,
                                        "snippet": "        $params['oauth_nonce'] = md5(microtime() . mt_rand());"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 270,
                                        "endLine": 270,
                                        "snippet": "            return hash_hmac('sha1', $data, $key, true);"
                                    }
                                }
                            ],
                            "message": "sha1 hash (used in hash_hmac) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1540_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4858_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3870_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1485_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5859_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1381_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2367_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_502_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5213_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1710_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4120_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 131,
                                        "endLine": 131,
                                        "snippet": "\t\t\t\treturn res.redirect(url + '?error=' + err.message + '#nodebb-comments');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from the HTTP request body flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "javascript/OR"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 134,
                                        "endLine": 134,
                                        "snippet": "\t\t\tres.redirect(url + '#nodebb-comments');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from the HTTP request body flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "javascript/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1991_1.ts",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1772_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1149_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 74,
                                        "endLine": 74,
                                        "snippet": "\t$access_control_nodes = $database->select($sql, $parameters);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into select, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 84,
                                        "endLine": 84,
                                        "snippet": "\techo th_order_by('node_type', $text['label-node_type'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 85,
                                        "endLine": 85,
                                        "snippet": "\techo th_order_by('node_cidr', $text['label-node_cidr'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 86,
                                        "endLine": 86,
                                        "snippet": "\techo th_order_by('node_domain', $text['label-node_domain'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 87,
                                        "endLine": 87,
                                        "snippet": "\techo th_order_by('node_description', $text['label-node_description'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2763_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1637_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2993_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2098_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 50,
                                        "endLine": 50,
                                        "snippet": "        request.getSession().setAttribute(\"from\", targetUrl);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
                            "ruleId": "java/TrustBoundaryViolation"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 76,
                                        "endLine": 76,
                                        "snippet": "\t\trequest.getSession().setAttribute(\"from\", whereFrom);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into setAttribute where it is used to modify the HTTP session object. This could result in mixing trusted and untrusted data in the same data structure, thus increasing the likelihood to mistakenly trust unvalidated data.",
                            "ruleId": "java/TrustBoundaryViolation"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4549_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4330_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5756_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4496_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5309_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3023_0.scala",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1511_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3746_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4445_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5818_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5145_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2094_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5617_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5712_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1131_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 52,
                                        "endLine": 52,
                                        "snippet": "\techo $response;"
                                    }
                                }
                            ],
                            "message": "Sensitive data from a password flows into the echo statement, where it is leaked.",
                            "ruleId": "php/PrivacyLeak"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 52,
                                        "endLine": 52,
                                        "snippet": "\techo $response;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3514_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2168_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4389_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_472_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5352_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1744_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 57,
                                        "endLine": 57,
                                        "snippet": "    $uniqid = substr(md5(uniqid('', 1)), 0, 8);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4938_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4618_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1690_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5775_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_777_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_374_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5773_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 137,
                                        "endLine": 137,
                                        "snippet": "\t\t\t$res2 = $db->query($sql);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a database flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 178,
                                        "endLine": 178,
                                        "snippet": "\t\t$res2 = $db->query($sql);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a database flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4196_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_463_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1150_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5421_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4905_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2414_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_775_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1707_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_891_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5186_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3814_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3383_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2416_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 85,
                                        "endLine": 85,
                                        "snippet": "\t\t\t\techo '<p style=\"text-align:center\"><a href=\"'. $_SERVER['PHP_SELF'] . '?auto_login=1&member_id='. $id .'\">' . _AT(\"go_to_my_start_page\") . '</a></p>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 155,
                                        "endLine": 155,
                                        "snippet": "\t\t\tassign_session_prefs(unserialize(stripslashes($row['preferences'])), 1);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into unserialize, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
                            "ruleId": "php/Deserialization"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 34,
                                        "endLine": 34,
                                        "snippet": "\t\t$code = substr(md5($e . $row['creation_date'] . $id), 0, 10);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "\t\t$code = substr(md5($row['email'] . $row['creation_date'] . $id), 0, 10);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 111,
                                        "endLine": 111,
                                        "snippet": "\t\t\t$code = substr(md5($row['email'] . $row['creation_date']. $row['member_id']), 0, 10);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5825_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3252_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5143_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 134,
                                        "endLine": 134,
                                        "snippet": "    header(\"Location: $url\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2158_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3483_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 293,
                                        "endLine": 293,
                                        "snippet": "\t\t*ret = val * factor;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an environment variable flows into a multiplication operator (*), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
                            "ruleId": "cpp/IntegerOverflow"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 309,
                                        "endLine": 309,
                                        "snippet": "\tif (!perf_parse_long(value, &ret))"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an environment variable flows into a multiplication operator (*), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
                            "ruleId": "cpp/IntegerOverflow"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 326,
                                        "endLine": 326,
                                        "snippet": "\treturn perf_config_int(name, value);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an environment variable flows into a multiplication operator (*), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
                            "ruleId": "cpp/IntegerOverflow"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 360,
                                        "endLine": 360,
                                        "snippet": "\tFILE *f = fopen(filename, \"r\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an environment variable flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitary files.",
                            "ruleId": "cpp/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5428_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2951_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3306_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 83,
                                        "endLine": 83,
                                        "snippet": "\t\t\t\techo ' <a class=\"btn btn-primary btn-xs btn-white btn-round\" href=\"' . $t_href . '\">' . lang_get( 'prev' ) . '</a>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 90,
                                        "endLine": 90,
                                        "snippet": "\t\t\t\t\techo ' <a class=\"btn btn-primary btn-xs btn-white btn-round\" href=\"' . $t_href . '\">' . lang_get( 'next' ) . '</a>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 110,
                                        "endLine": 110,
                                        "snippet": "\t\techo '<a class=\"btn btn-primary btn-sm btn-white btn-round\" href=\"' . $t_href . '\">' . lang_get( 'timeline_more' ) . '</a>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5010_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1510_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_558_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4622_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4153_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4483_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_392_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2844_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 91,
                                        "endLine": 91,
                                        "snippet": "\tvar requestURI='<?php print $_SERVER['REQUEST_URI'];?>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into print, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4802_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 68,
                                        "endLine": 68,
                                        "snippet": "  include_once($filename);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into include_once, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2361_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_336_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4353_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 145,
                                        "endLine": 145,
                                        "snippet": "      public X509Certificate[] getAcceptedIssuers() {"
                                    }
                                }
                            ],
                            "message": "TrustManager might be too permissive: all Certificate Authorities are trusted.",
                            "ruleId": "java/TooPermissiveTrustManager"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 98,
                                        "endLine": 98,
                                        "snippet": "      SSLContext sslContext = SSLContext.getInstance(\"TLS\");"
                                    }
                                }
                            ],
                            "message": "Implement secure HTTPS communication. Consider using latest TLSv1.2 instead of javax.net.ssl.SSLContext.getInstance.",
                            "ruleId": "java/TLS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 196,
                                        "endLine": 196,
                                        "snippet": "      public boolean verify(String host, SSLSession ssl) {"
                                    }
                                }
                            ],
                            "message": "The verify method always returns true, which means that any hostname is accepted. Such behaviour is insecure.",
                            "ruleId": "java/TooPermissiveHostnameVerifier"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_965_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_663_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3182_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 125,
                                        "endLine": 132,
                                        "snippet": "echo '<script>\ndocument.querySelector(\"#autoSearch\").checked = true;\ndocument.querySelector(\"#messageText\").classList.remove(\"error\");\ndocument.querySelector(\"#messageText\").classList.remove(\"success\");\ndocument.querySelector(\"#messageText\").innerHTML = \\'<span class=\"glyphicon glyphicon-repeat spinning\"></span>\\';\noriginalImage.src = \"https://image.whatanime.ga/imgproxy?url='.str_replace(' ','%20',rawurldecode($_GET[\"url\"])).'\";\ndocument.querySelector(\"#imageURL\").value = \"'.str_replace(' ','%20',rawurldecode($_GET[\"url\"])).'\";\n</script>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5557_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1400_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4488_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3682_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1072_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 124,
                                        "endLine": 124,
                                        "snippet": "            $this->getController()->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin/survey/sa/listsurveys '));"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 127,
                                        "endLine": 127,
                                        "snippet": "            $this->getController()->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin/survey/sa/listsurveys '));"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 134,
                                        "endLine": 134,
                                        "snippet": "                $this->getController()->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin/survey/sa/listsurveys '));"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2979_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 149,
                                        "endLine": 149,
                                        "snippet": "$rResult = pwg_query($sQuery);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into pwg_query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 225,
                                        "endLine": 225,
                                        "snippet": "  $result = pwg_query($query);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into pwg_query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2557_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5238_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5157_0.phtml",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "            <?= (isset($collation[$i]) ? $collation[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 67,
                                        "endLine": 67,
                                        "snippet": "            <?= (isset($func[$i]) ? $func[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 71,
                                        "endLine": 71,
                                        "snippet": "            <?= (isset($value[$i]) ? $value[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 81,
                                        "endLine": 81,
                                        "snippet": "                    value=\"<?= $_POST['criteriaColumnTypes'][$i]; ?>\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2188_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1269_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2921_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3442_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3939_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1241_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4408_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 28,
                                        "endLine": 28,
                                        "snippet": "           value=\"<?= isset($_POST['username']) ? $_POST['username'] : '' ?>\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3477_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_647_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5673_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 181,
                                        "endLine": 181,
                                        "snippet": "\t\t\treturn $this->controller->redirect($_REQUEST['BackURL']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2167_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_556_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5470_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_549_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4920_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2522_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5126_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3278_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3608_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4563_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5827_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5635_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5771_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5850_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1152_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 66,
                                        "endLine": 66,
                                        "snippet": "\t\t\t\t\t\t@unlink(base64_decode($recording_file_path[$index]));"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into unlink, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 66,
                                        "endLine": 66,
                                        "snippet": "\t\t\t\t\t\t@unlink(base64_decode($recording_file_path[$index]));"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into unlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5184_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_423_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_11_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_28_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4083_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4165_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1857_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2386_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1862_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_710_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 44,
                                        "endLine": 44,
                                        "snippet": "\t\t\t\t\t<strong><?php echo $lang['images']['name']; ?></strong> <?php echo $_FILES['imagefile']['name']; ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 48,
                                        "endLine": 48,
                                        "snippet": "\t\t\t\t\t<strong><?php echo $lang['images']['type']; ?></strong> <?php echo $_FILES['imagefile']['type']; ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 37,
                                        "endLine": 37,
                                        "snippet": "\t\tif (!copy($_FILES['imagefile']['tmp_name'], 'images/'.$_FILES['imagefile']['name']))"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 41,
                                        "endLine": 41,
                                        "snippet": "\t\t\tchmod('images/'.$_FILES['imagefile']['name'], 0666);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into chmod, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5358_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2437_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1135_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 67,
                                        "endLine": 67,
                                        "snippet": "\t$result = $database->select($sql, $parameters, 'all');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into select, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 89,
                                        "endLine": 89,
                                        "snippet": "\techo th_order_by('control_digits', $text['label-control_digits'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 90,
                                        "endLine": 90,
                                        "snippet": "\techo th_order_by('control_action', $text['label-control_action'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 91,
                                        "endLine": 91,
                                        "snippet": "\techo th_order_by('control_data', $text['label-control_data'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 92,
                                        "endLine": 92,
                                        "snippet": "\techo th_order_by('control_enabled', $text['label-control_enabled'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3206_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_376_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4734_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_75_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5042_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1348_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3713_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_988_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5350_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_269_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3990_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5454_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4411_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1917_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1154_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 33,
                                        "endLine": 33,
                                        "snippet": "DownloadFile($file_dir.$file);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 33,
                                        "endLine": 33,
                                        "snippet": "DownloadFile($file_dir.$file);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into readfile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5185_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5813_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_676_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4286_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5020_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2448_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 38,
                                        "endLine": 38,
                                        "snippet": "    header(\"Location: /reset/?action=code&user=\".$_POST['user']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2754_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3480_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1249_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3310_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4442_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1999_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1240_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3749_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4910_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4627_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4067_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2827_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1295_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1759_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 9,
                                        "endLine": 9,
                                        "snippet": "  $pagestr = file_get_contents($page);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 69,
                                        "endLine": 69,
                                        "snippet": "    list($pagecontent, $pagetitle, $pageauthor, $pagedate, $pagenomenu, $pageurl) = getpage($page);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 75,
                                        "endLine": 75,
                                        "snippet": "  if ($_GET['start'] > 0) { echo \"<a href=\\\"\" . $blogpagename . (($_GET['start'] > 10) ? \"?start=\" . ($_GET['start'] - 10) : \"\") . \"\\\">Newer articles</a>&nbsp; \"; }"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 76,
                                        "endLine": 76,
                                        "snippet": "  if (count(array_slice(array_reverse(glob(\"./article/*.{txt,md}\", GLOB_BRACE)), $_GET['start'], 11)) > 10) { echo \"<a href=\\\"\" . $blogpagename . \"?start=\" . ($_GET['start'] + 10) . \"\\\">Older articles</a>\"; }"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 9,
                                        "endLine": 9,
                                        "snippet": "  $pagestr = file_get_contents($page);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 69,
                                        "endLine": 69,
                                        "snippet": "    list($pagecontent, $pagetitle, $pageauthor, $pagedate, $pagenomenu, $pageurl) = getpage($page);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_753_0.py",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 59,
                                        "endLine": 59,
                                        "snippet": "        self.redirect(url)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "python/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1502_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5872_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2555_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 56,
                                        "endLine": 56,
                                        "snippet": "      pwg_query($query);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into pwg_query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 76,
                                        "endLine": 76,
                                        "snippet": "      pwg_query($query);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into pwg_query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 94,
                                        "endLine": 94,
                                        "snippet": "      pwg_query($query);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into pwg_query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2892_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1921_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1707_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4686_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2626_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 80,
                                        "endLine": 80,
                                        "snippet": "\t\t\tif (f != null && f.exists() && f.canRead()) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
                            "ruleId": "java/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 84,
                                        "endLine": 84,
                                        "snippet": "\t\t\t\tIOUtils.copy(new FileInputStream(f), writer, \"UTF-8\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "java/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1379_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1150_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4679_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5773_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 137,
                                        "endLine": 137,
                                        "snippet": "\t\t\t$res2 = $db->query($sql);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a database flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 178,
                                        "endLine": 178,
                                        "snippet": "\t\t$res2 = $db->query($sql);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a database flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_781_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4196_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_752_0.py",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "        self.redirect(url)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "python/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5567_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_971_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1250_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1536_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_555_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2416_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 85,
                                        "endLine": 85,
                                        "snippet": "\t\t\t\techo '<p style=\"text-align:center\"><a href=\"'. $_SERVER['PHP_SELF'] . '?auto_login=1&member_id='. $id .'&code=' . $code .'\">' . _AT(\"go_to_my_start_page\") . '</a></p>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 158,
                                        "endLine": 158,
                                        "snippet": "\t\t\tassign_session_prefs(unserialize(stripslashes($row['preferences'])), 1);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into unserialize, where it is used to deserialize an object. This may result in an Unsafe Deserialization vulnerability.",
                            "ruleId": "php/Deserialization"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 34,
                                        "endLine": 34,
                                        "snippet": "\t\t$code = substr(md5($e . $row['creation_date'] . $id), 0, 10);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "\t\t$code = substr(md5($row['email'] . $row['creation_date'] . $id), 0, 10);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 112,
                                        "endLine": 112,
                                        "snippet": "\t\t\t$code = substr(md5($row['email'] . $row['creation_date']. $row['member_id']), 0, 10);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 147,
                                        "endLine": 147,
                                        "snippet": "\t$code = substr(md5($e . $row['creation_date'] . $id), 0, 10);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5143_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 134,
                                        "endLine": 134,
                                        "snippet": "    header(\"Location: $url\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1977_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2494_1.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4453_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2169_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4309_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3806_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3383_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4802_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 62,
                                        "endLine": 62,
                                        "snippet": "  include_once($filename);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into include_once, where it is included dynamically. Allowing unvalidated user input to control files that are included dynamically in PHP can lead to malicious code execution.",
                            "ruleId": "php/FileInclusion"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3126_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2844_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5188_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4548_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1914_0.go",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 131,
                                        "endLine": 131,
                                        "snippet": "\t\t\terr = os.Symlink(header.Linkname, path)"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from open tar file flows into os.Symlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to create arbitrary symlinks.",
                            "ruleId": "go/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4639_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3306_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_603_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4460_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5428_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_802_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3719_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5134_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_135_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4958_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_778_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_564_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2025_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2361_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_465_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2299_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2367_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3809_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1485_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2374_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_10_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2412_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_199_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2860_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1646_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 157,
                                        "endLine": 157,
                                        "snippet": "        $params['oauth_nonce'] = md5(microtime() . mt_rand());"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 264,
                                        "endLine": 264,
                                        "snippet": "            return hash_hmac('sha1', $data, $key, true);"
                                    }
                                }
                            ],
                            "message": "sha1 hash (used in hash_hmac) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2066_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1355_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2196_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5309_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_337_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 120,
                                        "endLine": 120,
                                        "snippet": "\t\t\t$out = fopen(\"{$filePath}.part\", $chunk == 0 ? \"wb\" : \"ab\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 158,
                                        "endLine": 158,
                                        "snippet": "\t\t$out = fopen(\"{$filePath}.part\", $chunk == 0 ? \"wb\" : \"ab\");"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to open arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 189,
                                        "endLine": 189,
                                        "snippet": "\t\trename(\"{$filePath}.part\", $filePath);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into rename, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to move arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 197,
                                        "endLine": 197,
                                        "snippet": "\t\t@unlink($filePath);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an uploaded file flows into unlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4261_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4357_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1149_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 75,
                                        "endLine": 75,
                                        "snippet": "\t$access_control_nodes = $database->select($sql, $parameters);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into select, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 85,
                                        "endLine": 85,
                                        "snippet": "\techo th_order_by('node_type', $text['label-node_type'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 86,
                                        "endLine": 86,
                                        "snippet": "\techo th_order_by('node_cidr', $text['label-node_cidr'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 87,
                                        "endLine": 87,
                                        "snippet": "\techo th_order_by('node_domain', $text['label-node_domain'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 88,
                                        "endLine": 88,
                                        "snippet": "\techo th_order_by('node_description', $text['label-node_description'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_1101_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5764_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1264_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4438_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1131_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3607_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2957_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5712_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1905_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5145_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1251_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3683_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5775_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 19,
                                        "endLine": 19,
                                        "snippet": "\t<form method=\"post\" action=\"<?=$developer_root?>modules/views/create/<?=$id?>/\" class=\"module\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4879_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_783_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1744_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 57,
                                        "endLine": 57,
                                        "snippet": "    $uniqid = substr(md5(uniqid('', 1)), 0, 8);"
                                    }
                                }
                            ],
                            "message": "MD5 hash (used in md5) is insecure. Consider changing it to a secure hashing algorithm.",
                            "ruleId": "php/InsecureHash"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2214_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1709_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5012_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4687_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3842_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4411_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5454_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5237_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1756_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2003_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5586_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3713_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4652_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5596_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1348_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3861_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_957_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4152_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4180_0.py",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 50,
                                        "endLine": 50,
                                        "snippet": "    data_file = pathlib.Path(str(base_path) + \".data\")"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into pathlib.Path, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
                            "ruleId": "python/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 145,
                                        "endLine": 145,
                                        "snippet": "                json.dump("
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into json.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
                            "ruleId": "python/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 228,
                                        "endLine": 228,
                                        "snippet": "    response = flask.make_response(flask.send_file("
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into flask.send_file, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "python/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4016_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2917_0.go",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5028_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1266_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_559_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1154_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 33,
                                        "endLine": 33,
                                        "snippet": "DownloadFile($file_dir.$file);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 33,
                                        "endLine": 33,
                                        "snippet": "DownloadFile($file_dir.$file);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into readfile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1917_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4067_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1295_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 102,
                                        "endLine": 102,
                                        "snippet": "\tvar url = 'fifo_interactive_inc.php?c=<?php echo trim($_REQUEST[\"c\"]); ?>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2827_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3288_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5155_0.phtml",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3518_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3749_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5862_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_659_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_865_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3815_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_75_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3295_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_958_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_189_0.js",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 157,
                                        "endLine": 157,
                                        "snippet": "        userPassword: bcrypt.hashSync(req.body.userPassword, 10),"
                                    }
                                }
                            ],
                            "message": "Hardcoded value is used as a salt (in bcryptjs.hashSync). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
                            "ruleId": "javascript/HardcodedSecret"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 68,
                                        "snippet": "router.get('/admin/user/new', common.restrict, (req, res) => {\n    res.render('user_new', {\n        title: 'User - New',\n        admin: true,\n        session: req.session,\n        helpers: req.handlebars.helpers,\n        message: common.clearSessionValue(req.session, 'message'),\n        messageType: common.clearSessionValue(req.session, 'messageType'),\n        config: req.app.config\n    });\n});"
                                    }
                                }
                            ],
                            "message": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
                            "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_604_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2448_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 38,
                                        "endLine": 38,
                                        "snippet": "    header(\"Location: /reset/?action=code&user=\".$_POST['user']);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into header, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5357_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1845_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2555_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 57,
                                        "endLine": 57,
                                        "snippet": "      pwg_query($query);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into pwg_query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 77,
                                        "endLine": 77,
                                        "snippet": "      pwg_query($query);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into pwg_query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 96,
                                        "endLine": 96,
                                        "snippet": "      pwg_query($query);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into pwg_query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_719_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4924_0.phtml",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 63,
                                        "endLine": 63,
                                        "snippet": "            <?php echo (isset($collation[$i]) ? $collation[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 67,
                                        "endLine": 67,
                                        "snippet": "            <?php echo (isset($func[$i]) ? $func[$i] : ''); ?>"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 81,
                                        "endLine": 81,
                                        "snippet": "                    value=\"<?php echo $_POST['criteriaColumnTypes'][$i]; ?>\""
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_2470_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1759_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 9,
                                        "endLine": 9,
                                        "snippet": "  $pagestr = file_get_contents($page);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 69,
                                        "endLine": 69,
                                        "snippet": "    list($pagecontent, $pagetitle, $pageauthor, $pagedate, $pagenomenu, $pageurl) = getpage($page);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
                            "ruleId": "php/Ssrf"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 75,
                                        "endLine": 75,
                                        "snippet": "  if ($_GET['start'] > 0) { echo \"<a href=\\\"\" . $blogpagename . (($_GET['start'] > 10) ? \"?start=\" . ($_GET['start'] - 10) : \"\") . \"\\\">Newer articles</a>&nbsp; \"; }"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 76,
                                        "endLine": 76,
                                        "snippet": "  if (count(array_slice(array_reverse(glob(\"./article/*.{txt,md}\", GLOB_BRACE)), $_GET['start'], 11)) > 10) { echo \"<a href=\\\"\" . $blogpagename . \"?start=\" . ($_GET['start'] + 10) . \"\\\">Older articles</a>\"; }"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 34,
                                        "endLine": 34,
                                        "snippet": "  <base href=\"<?php echo $siteroot; ?>\">"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 9,
                                        "endLine": 9,
                                        "snippet": "  $pagestr = file_get_contents($page);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 69,
                                        "endLine": 69,
                                        "snippet": "    list($pagecontent, $pagetitle, $pageauthor, $pagedate, $pagenomenu, $pageurl) = getpage($page);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into file_get_contents, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5410_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_315_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_2534_0.cc",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4657_0.py",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 92,
                                        "endLine": 92,
                                        "snippet": "        with open(filename, 'wb') as f:"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an environment variable flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
                            "ruleId": "python/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_2979_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1691_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4733_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1072_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 124,
                                        "endLine": 124,
                                        "snippet": "            $this->getController()->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin/survey/sa/listsurveys '));"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 127,
                                        "endLine": 127,
                                        "snippet": "            $this->getController()->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin/survey/sa/listsurveys '));"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 134,
                                        "endLine": 134,
                                        "snippet": "                $this->getController()->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin/survey/sa/listsurveys '));"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into redirect, where it is used as an URL to redirect the user. This may result in an Open Redirect vulnerability.",
                            "ruleId": "php/OR"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_3699_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5321_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3182_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 125,
                                        "endLine": 132,
                                        "snippet": "echo '<script>\ndocument.querySelector(\"#autoSearch\").checked = true;\ndocument.querySelector(\"#messageText\").classList.remove(\"error\");\ndocument.querySelector(\"#messageText\").classList.remove(\"success\");\ndocument.querySelector(\"#messageText\").innerHTML = \\'<span class=\"glyphicon glyphicon-repeat spinning\"></span>\\';\noriginalImage.src = \"https://image.whatanime.ga/imgproxy?url='.str_replace(' ','%20',rawurldecode($_GET[\"url\"])).'\";\ndocument.querySelector(\"#imageURL\").value = \"'.str_replace(' ','%20',rawurldecode($_GET[\"url\"])).'\";\n</script>';"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_5673_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4408_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_311_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 57,
                                        "endLine": 57,
                                        "snippet": "if (@move_uploaded_file ($_FILES['file']['tmp_name'], $root . $_POST['path'] . '/' . $_FILES['file']['name'])) {"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into move_uploaded_file, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to move arbitrary files.",
                            "ruleId": "php/PT"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 58,
                                        "endLine": 58,
                                        "snippet": "\t@chmod ($root . $_POST['path'] . '/' . $_FILES['file']['name'], 0666);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into chmod, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_4262_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1468_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1465_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_2746_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1152_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 71,
                                        "endLine": 71,
                                        "snippet": "\t\t\t\t\t\t@unlink($call_recording_path.'/'.$call_recording_name);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a database flows into unlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
                            "ruleId": "php/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_5771_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4544_0.py",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5850_0.cpp",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4746_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_3029_0.h",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4175_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_29_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4651_0.rb",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_3608_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_5126_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_5470_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4920_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_506_0.c",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4471_0.java",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 139,
                                        "endLine": 139,
                                        "snippet": "         FileOutputStream fos = new FileOutputStream(file);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a zip file flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
                            "ruleId": "java/PT"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_1135_0.php",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 67,
                                        "endLine": 67,
                                        "snippet": "\t$result = $database->select($sql, $parameters, 'all');"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into select, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                            "ruleId": "php/Sqli"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 89,
                                        "endLine": 89,
                                        "snippet": "\techo th_order_by('control_digits', $text['label-control_digits'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 90,
                                        "endLine": 90,
                                        "snippet": "\techo th_order_by('control_action', $text['label-control_action'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 91,
                                        "endLine": 91,
                                        "snippet": "\techo th_order_by('control_data', $text['label-control_data'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 92,
                                        "endLine": 92,
                                        "snippet": "\techo th_order_by('control_enabled', $text['label-control_enabled'], $order_by, $order);"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 95,
                                        "endLine": 95,
                                        "snippet": "\t\techo \"<a href='conference_control_detail_edit.php?conference_control_uuid=\".$_GET['id'].\"' alt='\".$text['button-add'].\"'>$v_link_label_add</a>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 135,
                                        "endLine": 135,
                                        "snippet": "\t\techo \t\t\"<a href='conference_control_detail_edit.php?conference_control_uuid=\".$_GET['id'].\"' alt='\".$text['button-add'].\"'>$v_link_label_add</a>\";"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from an HTTP parameter flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
                            "ruleId": "php/XSS"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./bad_3206_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4952_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_1929_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./bad_4083_0.php",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_1577_0.java",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        },
        {
            "filepath": "./good_4684_0.c",
            "vulnerabilities": [
                {
                    "tool": "SnykCode",
                    "results": [
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 71,
                                        "endLine": 71,
                                        "snippet": "            char * const z = alias + strlen(alias) - 1U;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
                            "ruleId": "cpp/IntegerOverflow"
                        },
                        {
                            "locations": [
                                {
                                    "region": {
                                        "startLine": 83,
                                        "endLine": 83,
                                        "snippet": "                char * const z = dir + strlen(dir) - 1U;"
                                    }
                                }
                            ],
                            "message": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
                            "ruleId": "cpp/IntegerOverflow"
                        }
                    ]
                }
            ],
            "isVulnerable": true
        },
        {
            "filepath": "./good_4930_0.js",
            "vulnerabilities": [
            ],
            "isVulnerable": false
        }
    ],
    "statistics": {
        "targetFiles": 1384,
        "scannedFiles": 1384,
        "vulnerableFiles": 218,
        "scanStartTime": "2024-01-30T21:01:57.629",
        "scanEndTime": "2024-01-30T21:02:40.564",
        "scanDurationSeconds": 43
    },
    "evaluation": {
        "positives": 692,
        "negatives": 692,
        "truePositives": 121,
        "falsePositives": 97,
        "trueNegatives": 595,
        "falseNegatives": 571,
        "accuracy": 0.5173410404624278,
        "precision": 0.555045871559633,
        "recall": 0.17485549132947978,
        "f1": 0.265934065934066
    }
}